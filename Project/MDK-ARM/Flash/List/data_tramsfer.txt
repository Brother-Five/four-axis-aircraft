; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\flash\obj\data_tramsfer.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\data_tramsfer.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 --omf_browse=.\flash\obj\data_tramsfer.crf ..\..\MySrc\Data_Tramsfer.cpp]
                          THUMB

                          AREA ||i.ANO_Data1_Send||, CODE, READONLY, ALIGN=2

                  ANO_Data1_Send PROC
;;;144    
;;;145    void ANO_Data1_Send(u8 temp,float Data1)
000000  b5f0              PUSH     {r4-r7,lr}
;;;146    {
000002  ed2d8b02          VPUSH    {d8}
000006  b081              SUB      sp,sp,#4
000008  4606              MOV      r6,r0
00000a  eeb08a40          VMOV.F32 s16,s0
;;;147    	u8 _cnt=0;
00000e  2400              MOVS     r4,#0
;;;148    	u8 sum= 0;
000010  2700              MOVS     r7,#0
;;;149    	u8 i=0;
000012  2500              MOVS     r5,#0
;;;150    	int16_t _temp=0;
000014  2000              MOVS     r0,#0
000016  9000              STR      r0,[sp,#0]
;;;151    
;;;152    	data_to_send[_cnt++]=0xAA;//帧头
000018  22aa              MOVS     r2,#0xaa
00001a  4621              MOV      r1,r4
00001c  1c64              ADDS     r4,r4,#1
00001e  481b              LDR      r0,|L1.140|
000020  5442              STRB     r2,[r0,r1]
;;;153    	data_to_send[_cnt++]=0xAA;//帧头
000022  4621              MOV      r1,r4
000024  1c64              ADDS     r4,r4,#1
000026  5442              STRB     r2,[r0,r1]
;;;154    	data_to_send[_cnt++]=temp;//功能字
000028  4621              MOV      r1,r4
00002a  1c64              ADDS     r4,r4,#1
00002c  5446              STRB     r6,[r0,r1]
;;;155    	data_to_send[_cnt++]=0;//数据长度
00002e  2200              MOVS     r2,#0
000030  4621              MOV      r1,r4
000032  1c64              ADDS     r4,r4,#1
000034  5442              STRB     r2,[r0,r1]
;;;156    
;;;157    	_temp = (int)Data1;
000036  eebd0ac8          VCVT.S32.F32 s0,s16
00003a  ee100a10          VMOV     r0,s0
00003e  b200              SXTH     r0,r0
000040  9000              STR      r0,[sp,#0]
;;;158    	data_to_send[_cnt++]=BYTE1(_temp);
000042  f89d2001          LDRB     r2,[sp,#1]
000046  4621              MOV      r1,r4
000048  1c64              ADDS     r4,r4,#1
00004a  4810              LDR      r0,|L1.140|
00004c  5442              STRB     r2,[r0,r1]
;;;159    	data_to_send[_cnt++]=BYTE0(_temp);
00004e  f89d2000          LDRB     r2,[sp,#0]
000052  4621              MOV      r1,r4
000054  1c64              ADDS     r4,r4,#1
000056  5442              STRB     r2,[r0,r1]
;;;160    
;;;161    	data_to_send[3] = _cnt-4;//数据长度
000058  1f20              SUBS     r0,r4,#4
00005a  490c              LDR      r1,|L1.140|
00005c  70c8              STRB     r0,[r1,#3]
;;;162    	for(i=0;i<_cnt;i++) sum += data_to_send[i];	//求取校验值
00005e  bf00              NOP      
000060  e005              B        |L1.110|
                  |L1.98|
000062  480a              LDR      r0,|L1.140|
000064  5d40              LDRB     r0,[r0,r5]
000066  4438              ADD      r0,r0,r7
000068  b2c7              UXTB     r7,r0
00006a  1c68              ADDS     r0,r5,#1
00006c  b2c5              UXTB     r5,r0
                  |L1.110|
00006e  42a5              CMP      r5,r4
000070  dbf7              BLT      |L1.98|
;;;163    	data_to_send[_cnt++]=sum;//校验值
000072  4620              MOV      r0,r4
000074  1c61              ADDS     r1,r4,#1
000076  b2cc              UXTB     r4,r1
000078  4904              LDR      r1,|L1.140|
00007a  540f              STRB     r7,[r1,r0]
;;;164    
;;;165    #if USE_UART1_FIFO_DMA
;;;166    	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
00007c  4621              MOV      r1,r4
00007e  4803              LDR      r0,|L1.140|
000080  f7fffffe          BL       USART1_DMA_Send
;;;167    #else
;;;168    	USART1_SendString(_cnt,data_to_send);
;;;169    #endif
;;;170    }
000084  b001              ADD      sp,sp,#4
000086  ecbd8b02          VPOP     {d8}
00008a  bdf0              POP      {r4-r7,pc}
;;;171    
                          ENDP

                  |L1.140|
                          DCD      data_to_send

                          AREA ||i.ANO_Data2_Send||, CODE, READONLY, ALIGN=2

                  ANO_Data2_Send PROC
;;;114    
;;;115    void ANO_Data2_Send(u8 temp,float Data1, float Data2)
000000  b5f0              PUSH     {r4-r7,lr}
;;;116    {
000002  ed2d8b02          VPUSH    {d8}
000006  b081              SUB      sp,sp,#4
000008  4606              MOV      r6,r0
00000a  eeb08a40          VMOV.F32 s16,s0
00000e  eef08a60          VMOV.F32 s17,s1
;;;117    	u8 _cnt=0;
000012  2400              MOVS     r4,#0
;;;118    	u8 sum= 0;
000014  2700              MOVS     r7,#0
;;;119    	u8 i=0;
000016  2500              MOVS     r5,#0
;;;120    	int16_t _temp=0;
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
;;;121    
;;;122    	data_to_send[_cnt++]=0xAA;//帧头
00001c  22aa              MOVS     r2,#0xaa
00001e  4621              MOV      r1,r4
000020  1c64              ADDS     r4,r4,#1
000022  4824              LDR      r0,|L2.180|
000024  5442              STRB     r2,[r0,r1]
;;;123    	data_to_send[_cnt++]=0xAA;//帧头
000026  4621              MOV      r1,r4
000028  1c64              ADDS     r4,r4,#1
00002a  5442              STRB     r2,[r0,r1]
;;;124    	data_to_send[_cnt++]=temp;//功能字
00002c  4621              MOV      r1,r4
00002e  1c64              ADDS     r4,r4,#1
000030  5446              STRB     r6,[r0,r1]
;;;125    	data_to_send[_cnt++]=0;//数据长度
000032  2200              MOVS     r2,#0
000034  4621              MOV      r1,r4
000036  1c64              ADDS     r4,r4,#1
000038  5442              STRB     r2,[r0,r1]
;;;126    
;;;127    	_temp = (int)Data1;
00003a  eebd0ac8          VCVT.S32.F32 s0,s16
00003e  ee100a10          VMOV     r0,s0
000042  b200              SXTH     r0,r0
000044  9000              STR      r0,[sp,#0]
;;;128    	data_to_send[_cnt++]=BYTE1(_temp);
000046  f89d2001          LDRB     r2,[sp,#1]
00004a  4621              MOV      r1,r4
00004c  1c64              ADDS     r4,r4,#1
00004e  4819              LDR      r0,|L2.180|
000050  5442              STRB     r2,[r0,r1]
;;;129    	data_to_send[_cnt++]=BYTE0(_temp);
000052  f89d2000          LDRB     r2,[sp,#0]
000056  4621              MOV      r1,r4
000058  1c64              ADDS     r4,r4,#1
00005a  5442              STRB     r2,[r0,r1]
;;;130    	_temp = (int)Data2;
00005c  eebd0ae8          VCVT.S32.F32 s0,s17
000060  ee100a10          VMOV     r0,s0
000064  b200              SXTH     r0,r0
000066  9000              STR      r0,[sp,#0]
;;;131    	data_to_send[_cnt++]=BYTE1(_temp);
000068  f89d2001          LDRB     r2,[sp,#1]
00006c  4621              MOV      r1,r4
00006e  1c64              ADDS     r4,r4,#1
000070  4810              LDR      r0,|L2.180|
000072  5442              STRB     r2,[r0,r1]
;;;132    	data_to_send[_cnt++]=BYTE0(_temp);
000074  f89d2000          LDRB     r2,[sp,#0]
000078  4620              MOV      r0,r4
00007a  1c61              ADDS     r1,r4,#1
00007c  b2cc              UXTB     r4,r1
00007e  490d              LDR      r1,|L2.180|
000080  540a              STRB     r2,[r1,r0]
;;;133    	 //_temp=0;//先清零
;;;134    	data_to_send[3] = _cnt-4;//数据长度
000082  1f20              SUBS     r0,r4,#4
000084  70c8              STRB     r0,[r1,#3]
;;;135    	for(i=0;i<_cnt;i++) sum += data_to_send[i];	//求取校验值
000086  bf00              NOP      
000088  e005              B        |L2.150|
                  |L2.138|
00008a  480a              LDR      r0,|L2.180|
00008c  5d40              LDRB     r0,[r0,r5]
00008e  4438              ADD      r0,r0,r7
000090  b2c7              UXTB     r7,r0
000092  1c68              ADDS     r0,r5,#1
000094  b2c5              UXTB     r5,r0
                  |L2.150|
000096  42a5              CMP      r5,r4
000098  dbf7              BLT      |L2.138|
;;;136    	data_to_send[_cnt++]=sum;//校验值
00009a  4620              MOV      r0,r4
00009c  1c61              ADDS     r1,r4,#1
00009e  b2cc              UXTB     r4,r1
0000a0  4904              LDR      r1,|L2.180|
0000a2  540f              STRB     r7,[r1,r0]
;;;137    
;;;138    #if USE_UART1_FIFO_DMA
;;;139    	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
0000a4  4621              MOV      r1,r4
0000a6  4803              LDR      r0,|L2.180|
0000a8  f7fffffe          BL       USART1_DMA_Send
;;;140    #else
;;;141    	USART1_SendString(_cnt,data_to_send);
;;;142    #endif
;;;143    }
0000ac  b001              ADD      sp,sp,#4
0000ae  ecbd8b02          VPOP     {d8}
0000b2  bdf0              POP      {r4-r7,pc}
;;;144    
                          ENDP

                  |L2.180|
                          DCD      data_to_send

                          AREA ||i.ANO_Data3_Send||, CODE, READONLY, ALIGN=2

                  ANO_Data3_Send PROC
;;;81     
;;;82     void ANO_Data3_Send(u8 temp,float Data1, float Data2, float Data3)
000000  b5f0              PUSH     {r4-r7,lr}
;;;83     {
000002  ed2d8b04          VPUSH    {d8-d9}
000006  b081              SUB      sp,sp,#4
000008  4606              MOV      r6,r0
00000a  eeb08a40          VMOV.F32 s16,s0
00000e  eef08a60          VMOV.F32 s17,s1
000012  eeb09a41          VMOV.F32 s18,s2
;;;84     	u8 _cnt=0;
000016  2400              MOVS     r4,#0
;;;85     	u8 sum= 0;
000018  2700              MOVS     r7,#0
;;;86     	u8 i=0;
00001a  2500              MOVS     r5,#0
;;;87     	int16_t _temp=0;
00001c  2000              MOVS     r0,#0
00001e  9000              STR      r0,[sp,#0]
;;;88     
;;;89     	data_to_send[_cnt++]=0xAA;//帧头
000020  22aa              MOVS     r2,#0xaa
000022  4621              MOV      r1,r4
000024  1c64              ADDS     r4,r4,#1
000026  482e              LDR      r0,|L3.224|
000028  5442              STRB     r2,[r0,r1]
;;;90     	data_to_send[_cnt++]=0xAA;//帧头
00002a  4621              MOV      r1,r4
00002c  1c64              ADDS     r4,r4,#1
00002e  5442              STRB     r2,[r0,r1]
;;;91     	data_to_send[_cnt++]=temp;//功能字
000030  4621              MOV      r1,r4
000032  1c64              ADDS     r4,r4,#1
000034  5446              STRB     r6,[r0,r1]
;;;92     	data_to_send[_cnt++]=0;//数据长度
000036  2200              MOVS     r2,#0
000038  4621              MOV      r1,r4
00003a  1c64              ADDS     r4,r4,#1
00003c  5442              STRB     r2,[r0,r1]
;;;93     
;;;94     	_temp = (int)Data1;
00003e  eebd0ac8          VCVT.S32.F32 s0,s16
000042  ee100a10          VMOV     r0,s0
000046  b200              SXTH     r0,r0
000048  9000              STR      r0,[sp,#0]
;;;95     	data_to_send[_cnt++]=BYTE1(_temp);
00004a  f89d2001          LDRB     r2,[sp,#1]
00004e  4621              MOV      r1,r4
000050  1c64              ADDS     r4,r4,#1
000052  4823              LDR      r0,|L3.224|
000054  5442              STRB     r2,[r0,r1]
;;;96     	data_to_send[_cnt++]=BYTE0(_temp);
000056  f89d2000          LDRB     r2,[sp,#0]
00005a  4621              MOV      r1,r4
00005c  1c64              ADDS     r4,r4,#1
00005e  5442              STRB     r2,[r0,r1]
;;;97     	_temp = (int)Data2;
000060  eebd0ae8          VCVT.S32.F32 s0,s17
000064  ee100a10          VMOV     r0,s0
000068  b200              SXTH     r0,r0
00006a  9000              STR      r0,[sp,#0]
;;;98     	data_to_send[_cnt++]=BYTE1(_temp);
00006c  f89d2001          LDRB     r2,[sp,#1]
000070  4621              MOV      r1,r4
000072  1c64              ADDS     r4,r4,#1
000074  481a              LDR      r0,|L3.224|
000076  5442              STRB     r2,[r0,r1]
;;;99     	data_to_send[_cnt++]=BYTE0(_temp);
000078  f89d2000          LDRB     r2,[sp,#0]
00007c  4620              MOV      r0,r4
00007e  1c61              ADDS     r1,r4,#1
000080  b2cc              UXTB     r4,r1
000082  4917              LDR      r1,|L3.224|
000084  540a              STRB     r2,[r1,r0]
;;;100    	_temp = (int)Data3;
000086  eebd0ac9          VCVT.S32.F32 s0,s18
00008a  ee100a10          VMOV     r0,s0
00008e  b200              SXTH     r0,r0
000090  9000              STR      r0,[sp,#0]
;;;101    	data_to_send[_cnt++]=BYTE1(_temp);
000092  f89d2001          LDRB     r2,[sp,#1]
000096  4620              MOV      r0,r4
000098  1c61              ADDS     r1,r4,#1
00009a  b2cc              UXTB     r4,r1
00009c  4910              LDR      r1,|L3.224|
00009e  540a              STRB     r2,[r1,r0]
;;;102    	data_to_send[_cnt++]=BYTE0(_temp);
0000a0  f89d2000          LDRB     r2,[sp,#0]
0000a4  4620              MOV      r0,r4
0000a6  1c61              ADDS     r1,r4,#1
0000a8  b2cc              UXTB     r4,r1
0000aa  490d              LDR      r1,|L3.224|
0000ac  540a              STRB     r2,[r1,r0]
;;;103    	 //_temp=0;//先清零
;;;104    	data_to_send[3] = _cnt-4;//数据长度
0000ae  1f20              SUBS     r0,r4,#4
0000b0  70c8              STRB     r0,[r1,#3]
;;;105    	for(i=0;i<_cnt;i++) sum += data_to_send[i];	//求取校验值
0000b2  bf00              NOP      
0000b4  e005              B        |L3.194|
                  |L3.182|
0000b6  480a              LDR      r0,|L3.224|
0000b8  5d40              LDRB     r0,[r0,r5]
0000ba  4438              ADD      r0,r0,r7
0000bc  b2c7              UXTB     r7,r0
0000be  1c68              ADDS     r0,r5,#1
0000c0  b2c5              UXTB     r5,r0
                  |L3.194|
0000c2  42a5              CMP      r5,r4
0000c4  dbf7              BLT      |L3.182|
;;;106    	data_to_send[_cnt++]=sum;//校验值
0000c6  4620              MOV      r0,r4
0000c8  1c61              ADDS     r1,r4,#1
0000ca  b2cc              UXTB     r4,r1
0000cc  4904              LDR      r1,|L3.224|
0000ce  540f              STRB     r7,[r1,r0]
;;;107    
;;;108    #if USE_UART1_FIFO_DMA
;;;109    	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
0000d0  4621              MOV      r1,r4
0000d2  4803              LDR      r0,|L3.224|
0000d4  f7fffffe          BL       USART1_DMA_Send
;;;110    #else
;;;111    	USART1_SendString(_cnt,data_to_send);
;;;112    #endif
;;;113    }
0000d8  b001              ADD      sp,sp,#4
0000da  ecbd8b04          VPOP     {d8-d9}
0000de  bdf0              POP      {r4-r7,pc}
;;;114    
                          ENDP

                  |L3.224|
                          DCD      data_to_send

                          AREA ||i.ANO_Data6_Send||, CODE, READONLY, ALIGN=2

                  ANO_Data6_Send PROC
;;;4      
;;;5      void ANO_Data6_Send(u8 temp,float Data1, float Data2, float Data3, float Data4, float Data5, float Data6)
000000  b5f0              PUSH     {r4-r7,lr}
;;;6      {
000002  ed2d8b06          VPUSH    {d8-d10}
000006  b081              SUB      sp,sp,#4
000008  4606              MOV      r6,r0
00000a  eeb08a40          VMOV.F32 s16,s0
00000e  eef08a60          VMOV.F32 s17,s1
000012  eeb09a41          VMOV.F32 s18,s2
000016  eef09a61          VMOV.F32 s19,s3
00001a  eeb0aa42          VMOV.F32 s20,s4
00001e  eef0aa62          VMOV.F32 s21,s5
;;;7      	u8 _cnt=0;
000022  2400              MOVS     r4,#0
;;;8      	u8 sum= 0;
000024  2700              MOVS     r7,#0
;;;9      	u8 i=0;
000026  2500              MOVS     r5,#0
;;;10     	int16_t _temp=0;
000028  2000              MOVS     r0,#0
00002a  9000              STR      r0,[sp,#0]
;;;11     
;;;12     	data_to_send[_cnt++]=0xAA;//帧头
00002c  22aa              MOVS     r2,#0xaa
00002e  4621              MOV      r1,r4
000030  1c64              ADDS     r4,r4,#1
000032  484d              LDR      r0,|L4.360|
000034  5442              STRB     r2,[r0,r1]
;;;13     	data_to_send[_cnt++]=0xAA;//帧头
000036  4621              MOV      r1,r4
000038  1c64              ADDS     r4,r4,#1
00003a  5442              STRB     r2,[r0,r1]
;;;14     	data_to_send[_cnt++]=temp;//功能字
00003c  4621              MOV      r1,r4
00003e  1c64              ADDS     r4,r4,#1
000040  5446              STRB     r6,[r0,r1]
;;;15     	data_to_send[_cnt++]=0;//数据长度
000042  2200              MOVS     r2,#0
000044  4621              MOV      r1,r4
000046  1c64              ADDS     r4,r4,#1
000048  5442              STRB     r2,[r0,r1]
;;;16     
;;;17     	_temp = (int)Data1;
00004a  eebd0ac8          VCVT.S32.F32 s0,s16
00004e  ee100a10          VMOV     r0,s0
000052  b200              SXTH     r0,r0
000054  9000              STR      r0,[sp,#0]
;;;18     	data_to_send[_cnt++]=BYTE1(_temp);
000056  f89d2001          LDRB     r2,[sp,#1]
00005a  4621              MOV      r1,r4
00005c  1c64              ADDS     r4,r4,#1
00005e  4842              LDR      r0,|L4.360|
000060  5442              STRB     r2,[r0,r1]
;;;19     	data_to_send[_cnt++]=BYTE0(_temp);
000062  f89d2000          LDRB     r2,[sp,#0]
000066  4621              MOV      r1,r4
000068  1c64              ADDS     r4,r4,#1
00006a  5442              STRB     r2,[r0,r1]
;;;20     	_temp = (int)Data2;
00006c  eebd0ae8          VCVT.S32.F32 s0,s17
000070  ee100a10          VMOV     r0,s0
000074  b200              SXTH     r0,r0
000076  9000              STR      r0,[sp,#0]
;;;21     	data_to_send[_cnt++]=BYTE1(_temp);
000078  f89d2001          LDRB     r2,[sp,#1]
00007c  4621              MOV      r1,r4
00007e  1c64              ADDS     r4,r4,#1
000080  4839              LDR      r0,|L4.360|
000082  5442              STRB     r2,[r0,r1]
;;;22     	data_to_send[_cnt++]=BYTE0(_temp);
000084  f89d2000          LDRB     r2,[sp,#0]
000088  4620              MOV      r0,r4
00008a  1c61              ADDS     r1,r4,#1
00008c  b2cc              UXTB     r4,r1
00008e  4936              LDR      r1,|L4.360|
000090  540a              STRB     r2,[r1,r0]
;;;23     	_temp = (int)Data3;
000092  eebd0ac9          VCVT.S32.F32 s0,s18
000096  ee100a10          VMOV     r0,s0
00009a  b200              SXTH     r0,r0
00009c  9000              STR      r0,[sp,#0]
;;;24     	data_to_send[_cnt++]=BYTE1(_temp);
00009e  f89d2001          LDRB     r2,[sp,#1]
0000a2  4620              MOV      r0,r4
0000a4  1c61              ADDS     r1,r4,#1
0000a6  b2cc              UXTB     r4,r1
0000a8  492f              LDR      r1,|L4.360|
0000aa  540a              STRB     r2,[r1,r0]
;;;25     	data_to_send[_cnt++]=BYTE0(_temp);
0000ac  f89d2000          LDRB     r2,[sp,#0]
0000b0  4621              MOV      r1,r4
0000b2  1c60              ADDS     r0,r4,#1
0000b4  b2c4              UXTB     r4,r0
0000b6  482c              LDR      r0,|L4.360|
0000b8  5442              STRB     r2,[r0,r1]
;;;26     	_temp = (int)Data4;
0000ba  eebd0ae9          VCVT.S32.F32 s0,s19
0000be  ee100a10          VMOV     r0,s0
0000c2  b200              SXTH     r0,r0
0000c4  9000              STR      r0,[sp,#0]
;;;27     	data_to_send[_cnt++]=BYTE1(_temp);
0000c6  f89d2001          LDRB     r2,[sp,#1]
0000ca  4620              MOV      r0,r4
0000cc  1c61              ADDS     r1,r4,#1
0000ce  b2cc              UXTB     r4,r1
0000d0  4925              LDR      r1,|L4.360|
0000d2  540a              STRB     r2,[r1,r0]
;;;28     	data_to_send[_cnt++]=BYTE0(_temp);
0000d4  f89d2000          LDRB     r2,[sp,#0]
0000d8  4620              MOV      r0,r4
0000da  1c61              ADDS     r1,r4,#1
0000dc  b2cc              UXTB     r4,r1
0000de  4922              LDR      r1,|L4.360|
0000e0  540a              STRB     r2,[r1,r0]
;;;29     		_temp = (int)Data5;
0000e2  eebd0aca          VCVT.S32.F32 s0,s20
0000e6  ee100a10          VMOV     r0,s0
0000ea  b200              SXTH     r0,r0
0000ec  9000              STR      r0,[sp,#0]
;;;30     	data_to_send[_cnt++]=BYTE1(_temp);
0000ee  f89d2001          LDRB     r2,[sp,#1]
0000f2  4620              MOV      r0,r4
0000f4  1c61              ADDS     r1,r4,#1
0000f6  b2cc              UXTB     r4,r1
0000f8  491b              LDR      r1,|L4.360|
0000fa  540a              STRB     r2,[r1,r0]
;;;31     	data_to_send[_cnt++]=BYTE0(_temp);
0000fc  f89d2000          LDRB     r2,[sp,#0]
000100  4620              MOV      r0,r4
000102  1c61              ADDS     r1,r4,#1
000104  b2cc              UXTB     r4,r1
000106  4918              LDR      r1,|L4.360|
000108  540a              STRB     r2,[r1,r0]
;;;32     	_temp = (int)Data6;
00010a  eebd0aea          VCVT.S32.F32 s0,s21
00010e  ee100a10          VMOV     r0,s0
000112  b200              SXTH     r0,r0
000114  9000              STR      r0,[sp,#0]
;;;33     	data_to_send[_cnt++]=BYTE1(_temp);
000116  f89d2001          LDRB     r2,[sp,#1]
00011a  4620              MOV      r0,r4
00011c  1c61              ADDS     r1,r4,#1
00011e  b2cc              UXTB     r4,r1
000120  4911              LDR      r1,|L4.360|
000122  540a              STRB     r2,[r1,r0]
;;;34     	data_to_send[_cnt++]=BYTE0(_temp);
000124  f89d2000          LDRB     r2,[sp,#0]
000128  4621              MOV      r1,r4
00012a  1c60              ADDS     r0,r4,#1
00012c  b2c4              UXTB     r4,r0
00012e  480e              LDR      r0,|L4.360|
000130  5442              STRB     r2,[r0,r1]
;;;35     	 //_temp=0;//先清零
;;;36     	data_to_send[3] = _cnt-4;//数据长度
000132  1f20              SUBS     r0,r4,#4
000134  490c              LDR      r1,|L4.360|
000136  70c8              STRB     r0,[r1,#3]
;;;37     	for(i=0;i<_cnt;i++) sum += data_to_send[i];	//求取校验值
000138  bf00              NOP      
00013a  e005              B        |L4.328|
                  |L4.316|
00013c  480a              LDR      r0,|L4.360|
00013e  5d40              LDRB     r0,[r0,r5]
000140  4438              ADD      r0,r0,r7
000142  b2c7              UXTB     r7,r0
000144  1c68              ADDS     r0,r5,#1
000146  b2c5              UXTB     r5,r0
                  |L4.328|
000148  42a5              CMP      r5,r4
00014a  dbf7              BLT      |L4.316|
;;;38     	data_to_send[_cnt++]=sum;//校验值
00014c  4620              MOV      r0,r4
00014e  1c61              ADDS     r1,r4,#1
000150  b2cc              UXTB     r4,r1
000152  4905              LDR      r1,|L4.360|
000154  540f              STRB     r7,[r1,r0]
;;;39     
;;;40     	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
000156  4621              MOV      r1,r4
000158  4803              LDR      r0,|L4.360|
00015a  f7fffffe          BL       USART1_DMA_Send
;;;41     //#if USE_UART1_FIFO_DMA
;;;42     //	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
;;;43     //#else
;;;44     //	USART1_SendString(_cnt,data_to_send);
;;;45     //#endif
;;;46     }
00015e  b001              ADD      sp,sp,#4
000160  ecbd8b06          VPOP     {d8-d10}
000164  bdf0              POP      {r4-r7,pc}
;;;47     
                          ENDP

000166  0000              DCW      0x0000
                  |L4.360|
                          DCD      data_to_send

                          AREA ||i.ANO_ImuDataReturn||, CODE, READONLY, ALIGN=2

                  ANO_ImuDataReturn PROC
;;;171    
;;;172    void ANO_ImuDataReturn(float *angle,
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;173    								float *temp1,float *temp2,float *temp3,
;;;174    								float *temp4,float *temp5,float *temp6,
;;;175    								float *thottle,
;;;176    								signed short  temp7,
;;;177    								signed short  temp8)
;;;178    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
00000a  4699              MOV      r9,r3
00000c  f8ddb030          LDR      r11,[sp,#0x30]
;;;179    	u8 _cnt=0;
000010  2400              MOVS     r4,#0
;;;180    	u8 sum =0;
000012  46a2              MOV      r10,r4
;;;181    	u8 i=0;
000014  2500              MOVS     r5,#0
;;;182    	float _temp=0.0f;//先清零
000016  ed9f0aa6          VLDR     s0,|L5.688|
00001a  ed8d0a01          VSTR     s0,[sp,#4]
;;;183    	signed short _temp1=0;
00001e  2000              MOVS     r0,#0
000020  9000              STR      r0,[sp,#0]
;;;184    	
;;;185    	data_to_send[_cnt++]=0xAA;//帧头
000022  22aa              MOVS     r2,#0xaa
000024  4621              MOV      r1,r4
000026  1c64              ADDS     r4,r4,#1
000028  48a2              LDR      r0,|L5.692|
00002a  5442              STRB     r2,[r0,r1]
;;;186    	data_to_send[_cnt++]=0xAA;//帧头
00002c  4621              MOV      r1,r4
00002e  1c64              ADDS     r4,r4,#1
000030  5442              STRB     r2,[r0,r1]
;;;187    	data_to_send[_cnt++]=0xF1;//功能字
000032  22f1              MOVS     r2,#0xf1
000034  4621              MOV      r1,r4
000036  1c64              ADDS     r4,r4,#1
000038  5442              STRB     r2,[r0,r1]
;;;188    	data_to_send[_cnt++]=0;//数据长度
00003a  2200              MOVS     r2,#0
00003c  4621              MOV      r1,r4
00003e  1c64              ADDS     r4,r4,#1
000040  5442              STRB     r2,[r0,r1]
;;;189    
;;;190    	
;;;191    		_temp = *angle;
000042  ed960a00          VLDR     s0,[r6,#0]
000046  ed8d0a01          VSTR     s0,[sp,#4]
;;;192    	data_to_send[_cnt++]=BYTE3(_temp);
00004a  f89d2007          LDRB     r2,[sp,#7]
00004e  4621              MOV      r1,r4
000050  1c64              ADDS     r4,r4,#1
000052  5442              STRB     r2,[r0,r1]
;;;193    	data_to_send[_cnt++]=BYTE2(_temp);
000054  f89d2006          LDRB     r2,[sp,#6]
000058  4621              MOV      r1,r4
00005a  1c64              ADDS     r4,r4,#1
00005c  5442              STRB     r2,[r0,r1]
;;;194    	data_to_send[_cnt++]=BYTE1(_temp);
00005e  f89d2005          LDRB     r2,[sp,#5]
000062  4621              MOV      r1,r4
000064  1c64              ADDS     r4,r4,#1
000066  5442              STRB     r2,[r0,r1]
;;;195    	data_to_send[_cnt++]=BYTE0(_temp);
000068  f89d2004          LDRB     r2,[sp,#4]
00006c  4620              MOV      r0,r4
00006e  1c61              ADDS     r1,r4,#1
000070  b2cc              UXTB     r4,r1
000072  4990              LDR      r1,|L5.692|
000074  540a              STRB     r2,[r1,r0]
;;;196    	
;;;197    	_temp = *temp1;
000076  ed970a00          VLDR     s0,[r7,#0]
00007a  ed8d0a01          VSTR     s0,[sp,#4]
;;;198    	data_to_send[_cnt++]=BYTE3(_temp);
00007e  f89d2007          LDRB     r2,[sp,#7]
000082  4620              MOV      r0,r4
000084  1c61              ADDS     r1,r4,#1
000086  b2cc              UXTB     r4,r1
000088  498a              LDR      r1,|L5.692|
00008a  540a              STRB     r2,[r1,r0]
;;;199    	data_to_send[_cnt++]=BYTE2(_temp);
00008c  f89d2006          LDRB     r2,[sp,#6]
000090  4620              MOV      r0,r4
000092  1c61              ADDS     r1,r4,#1
000094  b2cc              UXTB     r4,r1
000096  4987              LDR      r1,|L5.692|
000098  540a              STRB     r2,[r1,r0]
;;;200    	data_to_send[_cnt++]=BYTE1(_temp);
00009a  f89d2005          LDRB     r2,[sp,#5]
00009e  4620              MOV      r0,r4
0000a0  1c61              ADDS     r1,r4,#1
0000a2  b2cc              UXTB     r4,r1
0000a4  4983              LDR      r1,|L5.692|
0000a6  540a              STRB     r2,[r1,r0]
;;;201    	data_to_send[_cnt++]=BYTE0(_temp);
0000a8  f89d2004          LDRB     r2,[sp,#4]
0000ac  4620              MOV      r0,r4
0000ae  1c61              ADDS     r1,r4,#1
0000b0  b2cc              UXTB     r4,r1
0000b2  4980              LDR      r1,|L5.692|
0000b4  540a              STRB     r2,[r1,r0]
;;;202    
;;;203    	_temp = *temp2;
0000b6  ed980a00          VLDR     s0,[r8,#0]
0000ba  ed8d0a01          VSTR     s0,[sp,#4]
;;;204    	data_to_send[_cnt++]=BYTE3(_temp);
0000be  f89d2007          LDRB     r2,[sp,#7]
0000c2  4620              MOV      r0,r4
0000c4  1c61              ADDS     r1,r4,#1
0000c6  b2cc              UXTB     r4,r1
0000c8  497a              LDR      r1,|L5.692|
0000ca  540a              STRB     r2,[r1,r0]
;;;205    	data_to_send[_cnt++]=BYTE2(_temp);
0000cc  f89d2006          LDRB     r2,[sp,#6]
0000d0  4620              MOV      r0,r4
0000d2  1c61              ADDS     r1,r4,#1
0000d4  b2cc              UXTB     r4,r1
0000d6  4977              LDR      r1,|L5.692|
0000d8  540a              STRB     r2,[r1,r0]
;;;206    	data_to_send[_cnt++]=BYTE1(_temp);
0000da  f89d2005          LDRB     r2,[sp,#5]
0000de  4620              MOV      r0,r4
0000e0  1c61              ADDS     r1,r4,#1
0000e2  b2cc              UXTB     r4,r1
0000e4  4973              LDR      r1,|L5.692|
0000e6  540a              STRB     r2,[r1,r0]
;;;207    	data_to_send[_cnt++]=BYTE0(_temp);
0000e8  f89d2004          LDRB     r2,[sp,#4]
0000ec  4620              MOV      r0,r4
0000ee  1c61              ADDS     r1,r4,#1
0000f0  b2cc              UXTB     r4,r1
0000f2  4970              LDR      r1,|L5.692|
0000f4  540a              STRB     r2,[r1,r0]
;;;208    
;;;209    	_temp = *temp3;
0000f6  ed990a00          VLDR     s0,[r9,#0]
0000fa  ed8d0a01          VSTR     s0,[sp,#4]
;;;210    	data_to_send[_cnt++]=BYTE3(_temp);
0000fe  f89d2007          LDRB     r2,[sp,#7]
000102  4620              MOV      r0,r4
000104  1c61              ADDS     r1,r4,#1
000106  b2cc              UXTB     r4,r1
000108  496a              LDR      r1,|L5.692|
00010a  540a              STRB     r2,[r1,r0]
;;;211    	data_to_send[_cnt++]=BYTE2(_temp);
00010c  f89d2006          LDRB     r2,[sp,#6]
000110  4620              MOV      r0,r4
000112  1c61              ADDS     r1,r4,#1
000114  b2cc              UXTB     r4,r1
000116  4967              LDR      r1,|L5.692|
000118  540a              STRB     r2,[r1,r0]
;;;212    	data_to_send[_cnt++]=BYTE1(_temp);
00011a  f89d2005          LDRB     r2,[sp,#5]
00011e  4620              MOV      r0,r4
000120  1c61              ADDS     r1,r4,#1
000122  b2cc              UXTB     r4,r1
000124  4963              LDR      r1,|L5.692|
000126  540a              STRB     r2,[r1,r0]
;;;213    	data_to_send[_cnt++]=BYTE0(_temp);
000128  f89d2004          LDRB     r2,[sp,#4]
00012c  4620              MOV      r0,r4
00012e  1c61              ADDS     r1,r4,#1
000130  b2cc              UXTB     r4,r1
000132  4960              LDR      r1,|L5.692|
000134  540a              STRB     r2,[r1,r0]
;;;214    
;;;215    
;;;216    	_temp = *temp4;
000136  ed9b0a00          VLDR     s0,[r11,#0]
00013a  ed8d0a01          VSTR     s0,[sp,#4]
;;;217    	data_to_send[_cnt++]=BYTE3(_temp);
00013e  f89d2007          LDRB     r2,[sp,#7]
000142  4620              MOV      r0,r4
000144  1c61              ADDS     r1,r4,#1
000146  b2cc              UXTB     r4,r1
000148  495a              LDR      r1,|L5.692|
00014a  540a              STRB     r2,[r1,r0]
;;;218    	data_to_send[_cnt++]=BYTE2(_temp);
00014c  f89d2006          LDRB     r2,[sp,#6]
000150  4621              MOV      r1,r4
000152  1c60              ADDS     r0,r4,#1
000154  b2c4              UXTB     r4,r0
000156  4857              LDR      r0,|L5.692|
000158  5442              STRB     r2,[r0,r1]
;;;219    	data_to_send[_cnt++]=BYTE1(_temp);
00015a  f89d2005          LDRB     r2,[sp,#5]
00015e  4620              MOV      r0,r4
000160  1c61              ADDS     r1,r4,#1
000162  b2cc              UXTB     r4,r1
000164  4953              LDR      r1,|L5.692|
000166  540a              STRB     r2,[r1,r0]
;;;220    	data_to_send[_cnt++]=BYTE0(_temp);
000168  f89d2004          LDRB     r2,[sp,#4]
00016c  4620              MOV      r0,r4
00016e  1c61              ADDS     r1,r4,#1
000170  b2cc              UXTB     r4,r1
000172  4950              LDR      r1,|L5.692|
000174  540a              STRB     r2,[r1,r0]
;;;221    
;;;222    	_temp = *temp5;
000176  980d              LDR      r0,[sp,#0x34]
000178  ed900a00          VLDR     s0,[r0,#0]
00017c  ed8d0a01          VSTR     s0,[sp,#4]
;;;223    	data_to_send[_cnt++]=BYTE3(_temp);
000180  f89d2007          LDRB     r2,[sp,#7]
000184  4620              MOV      r0,r4
000186  1c61              ADDS     r1,r4,#1
000188  b2cc              UXTB     r4,r1
00018a  494a              LDR      r1,|L5.692|
00018c  540a              STRB     r2,[r1,r0]
;;;224    	data_to_send[_cnt++]=BYTE2(_temp);
00018e  f89d2006          LDRB     r2,[sp,#6]
000192  4620              MOV      r0,r4
000194  1c61              ADDS     r1,r4,#1
000196  b2cc              UXTB     r4,r1
000198  4946              LDR      r1,|L5.692|
00019a  540a              STRB     r2,[r1,r0]
;;;225    	data_to_send[_cnt++]=BYTE1(_temp);
00019c  f89d2005          LDRB     r2,[sp,#5]
0001a0  4620              MOV      r0,r4
0001a2  1c61              ADDS     r1,r4,#1
0001a4  b2cc              UXTB     r4,r1
0001a6  4943              LDR      r1,|L5.692|
0001a8  540a              STRB     r2,[r1,r0]
;;;226    	data_to_send[_cnt++]=BYTE0(_temp);
0001aa  f89d2004          LDRB     r2,[sp,#4]
0001ae  4620              MOV      r0,r4
0001b0  1c61              ADDS     r1,r4,#1
0001b2  b2cc              UXTB     r4,r1
0001b4  493f              LDR      r1,|L5.692|
0001b6  540a              STRB     r2,[r1,r0]
;;;227    
;;;228    	_temp = *temp6;
0001b8  980e              LDR      r0,[sp,#0x38]
0001ba  ed900a00          VLDR     s0,[r0,#0]
0001be  ed8d0a01          VSTR     s0,[sp,#4]
;;;229    	data_to_send[_cnt++]=BYTE3(_temp);
0001c2  f89d2007          LDRB     r2,[sp,#7]
0001c6  4620              MOV      r0,r4
0001c8  1c61              ADDS     r1,r4,#1
0001ca  b2cc              UXTB     r4,r1
0001cc  4939              LDR      r1,|L5.692|
0001ce  540a              STRB     r2,[r1,r0]
;;;230    	data_to_send[_cnt++]=BYTE2(_temp);
0001d0  f89d2006          LDRB     r2,[sp,#6]
0001d4  4620              MOV      r0,r4
0001d6  1c61              ADDS     r1,r4,#1
0001d8  b2cc              UXTB     r4,r1
0001da  4936              LDR      r1,|L5.692|
0001dc  540a              STRB     r2,[r1,r0]
;;;231    	data_to_send[_cnt++]=BYTE1(_temp);
0001de  f89d2005          LDRB     r2,[sp,#5]
0001e2  4620              MOV      r0,r4
0001e4  1c61              ADDS     r1,r4,#1
0001e6  b2cc              UXTB     r4,r1
0001e8  4932              LDR      r1,|L5.692|
0001ea  540a              STRB     r2,[r1,r0]
;;;232    	data_to_send[_cnt++]=BYTE0(_temp);
0001ec  f89d2004          LDRB     r2,[sp,#4]
0001f0  4620              MOV      r0,r4
0001f2  1c61              ADDS     r1,r4,#1
0001f4  b2cc              UXTB     r4,r1
0001f6  492f              LDR      r1,|L5.692|
0001f8  540a              STRB     r2,[r1,r0]
;;;233    	
;;;234    	_temp = *thottle;
0001fa  980f              LDR      r0,[sp,#0x3c]
0001fc  ed900a00          VLDR     s0,[r0,#0]
000200  ed8d0a01          VSTR     s0,[sp,#4]
;;;235    	data_to_send[_cnt++]=BYTE3(_temp);
000204  f89d2007          LDRB     r2,[sp,#7]
000208  4620              MOV      r0,r4
00020a  1c61              ADDS     r1,r4,#1
00020c  b2cc              UXTB     r4,r1
00020e  4929              LDR      r1,|L5.692|
000210  540a              STRB     r2,[r1,r0]
;;;236    	data_to_send[_cnt++]=BYTE2(_temp);
000212  f89d2006          LDRB     r2,[sp,#6]
000216  4620              MOV      r0,r4
000218  1c61              ADDS     r1,r4,#1
00021a  b2cc              UXTB     r4,r1
00021c  4925              LDR      r1,|L5.692|
00021e  540a              STRB     r2,[r1,r0]
;;;237    	data_to_send[_cnt++]=BYTE1(_temp);
000220  f89d2005          LDRB     r2,[sp,#5]
000224  4621              MOV      r1,r4
000226  1c60              ADDS     r0,r4,#1
000228  b2c4              UXTB     r4,r0
00022a  4822              LDR      r0,|L5.692|
00022c  5442              STRB     r2,[r0,r1]
;;;238    	data_to_send[_cnt++]=BYTE0(_temp);
00022e  f89d2004          LDRB     r2,[sp,#4]
000232  4620              MOV      r0,r4
000234  1c61              ADDS     r1,r4,#1
000236  b2cc              UXTB     r4,r1
000238  491e              LDR      r1,|L5.692|
00023a  540a              STRB     r2,[r1,r0]
;;;239    	
;;;240    		_temp1 = temp7;
00023c  9810              LDR      r0,[sp,#0x40]
00023e  9000              STR      r0,[sp,#0]
;;;241    // 	tx_buffer[_cnt++]=BYTE3(_temp1);
;;;242    // 	tx_buffer[_cnt++]=BYTE2(_temp1);
;;;243    	data_to_send[_cnt++]=BYTE1(_temp1);
000240  f89d2001          LDRB     r2,[sp,#1]
000244  4620              MOV      r0,r4
000246  1c61              ADDS     r1,r4,#1
000248  b2cc              UXTB     r4,r1
00024a  491a              LDR      r1,|L5.692|
00024c  540a              STRB     r2,[r1,r0]
;;;244    	data_to_send[_cnt++]=BYTE0(_temp1);
00024e  f89d2000          LDRB     r2,[sp,#0]
000252  4620              MOV      r0,r4
000254  1c61              ADDS     r1,r4,#1
000256  b2cc              UXTB     r4,r1
000258  4916              LDR      r1,|L5.692|
00025a  540a              STRB     r2,[r1,r0]
;;;245    	
;;;246    		_temp1 = temp8;
00025c  9811              LDR      r0,[sp,#0x44]
00025e  9000              STR      r0,[sp,#0]
;;;247    // 	tx_buffer[_cnt++]=BYTE3(_temp1);
;;;248    // 	tx_buffer[_cnt++]=BYTE2(_temp1);
;;;249    	data_to_send[_cnt++]=BYTE1(_temp1);
000260  f89d2001          LDRB     r2,[sp,#1]
000264  4620              MOV      r0,r4
000266  1c61              ADDS     r1,r4,#1
000268  b2cc              UXTB     r4,r1
00026a  4912              LDR      r1,|L5.692|
00026c  540a              STRB     r2,[r1,r0]
;;;250    	data_to_send[_cnt++]=BYTE0(_temp1);
00026e  f89d2000          LDRB     r2,[sp,#0]
000272  4620              MOV      r0,r4
000274  1c61              ADDS     r1,r4,#1
000276  b2cc              UXTB     r4,r1
000278  490e              LDR      r1,|L5.692|
00027a  540a              STRB     r2,[r1,r0]
;;;251    	
;;;252    	data_to_send[3] = _cnt-4;//数据长度 16-4=12
00027c  1f20              SUBS     r0,r4,#4
00027e  70c8              STRB     r0,[r1,#3]
;;;253    
;;;254    	
;;;255    for(i=0;i<_cnt;i++) sum += data_to_send[i];	//求取校验值
000280  bf00              NOP      
000282  e006              B        |L5.658|
                  |L5.644|
000284  480b              LDR      r0,|L5.692|
000286  5d40              LDRB     r0,[r0,r5]
000288  4450              ADD      r0,r0,r10
00028a  f0000aff          AND      r10,r0,#0xff
00028e  1c68              ADDS     r0,r5,#1
000290  b2c5              UXTB     r5,r0
                  |L5.658|
000292  42a5              CMP      r5,r4
000294  dbf6              BLT      |L5.644|
;;;256    	data_to_send[_cnt++]=sum;//校验值
000296  4620              MOV      r0,r4
000298  1c61              ADDS     r1,r4,#1
00029a  b2cc              UXTB     r4,r1
00029c  4905              LDR      r1,|L5.692|
00029e  f801a000          STRB     r10,[r1,r0]
;;;257    
;;;258    #if USE_UART1_FIFO_DMA
;;;259    	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
0002a2  4621              MOV      r1,r4
0002a4  4803              LDR      r0,|L5.692|
0002a6  f7fffffe          BL       USART1_DMA_Send
;;;260    #else
;;;261    	USART1_SendString(_cnt,data_to_send);
;;;262    #endif
;;;263    }
0002aa  e8bd9ffc          POP      {r2-r12,pc}
;;;264    void ANO_ImuDataReturn1(float *angle,
                          ENDP

0002ae  0000              DCW      0x0000
                  |L5.688|
0002b0  00000000          DCFS     0x00000000 ; 0
                  |L5.692|
                          DCD      data_to_send

                          AREA ||i.ANO_ImuDataReturn1||, CODE, READONLY, ALIGN=2

                  ANO_ImuDataReturn1 PROC
;;;263    }
;;;264    void ANO_ImuDataReturn1(float *angle,
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;265    								float *temp1,float *temp2,float *temp3,
;;;266    								float *temp4,float *temp5,signed short  temp6,
;;;267    								signed short thottle,
;;;268    								signed short  temp7,
;;;269    								signed short  temp8)
;;;270    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
00000a  4699              MOV      r9,r3
00000c  f8ddb030          LDR      r11,[sp,#0x30]
;;;271    	u8 _cnt=0;
000010  2400              MOVS     r4,#0
;;;272    	u8 sum =0;
000012  46a2              MOV      r10,r4
;;;273    	u8 i=0;
000014  2500              MOVS     r5,#0
;;;274    	float _temp=0.0f;//先清零
000016  ed9f0a95          VLDR     s0,|L6.620|
00001a  ed8d0a01          VSTR     s0,[sp,#4]
;;;275    	signed short _temp1=0;
00001e  2000              MOVS     r0,#0
000020  9000              STR      r0,[sp,#0]
;;;276    	
;;;277    	data_to_send[_cnt++]=0xAA;//帧头
000022  22aa              MOVS     r2,#0xaa
000024  4621              MOV      r1,r4
000026  1c64              ADDS     r4,r4,#1
000028  4891              LDR      r0,|L6.624|
00002a  5442              STRB     r2,[r0,r1]
;;;278    	data_to_send[_cnt++]=0xAA;//帧头
00002c  4621              MOV      r1,r4
00002e  1c64              ADDS     r4,r4,#1
000030  5442              STRB     r2,[r0,r1]
;;;279    	data_to_send[_cnt++]=0xF1;//功能字
000032  22f1              MOVS     r2,#0xf1
000034  4621              MOV      r1,r4
000036  1c64              ADDS     r4,r4,#1
000038  5442              STRB     r2,[r0,r1]
;;;280    	data_to_send[_cnt++]=0;//数据长度
00003a  2200              MOVS     r2,#0
00003c  4621              MOV      r1,r4
00003e  1c64              ADDS     r4,r4,#1
000040  5442              STRB     r2,[r0,r1]
;;;281    
;;;282    	
;;;283    		_temp = *angle;
000042  ed960a00          VLDR     s0,[r6,#0]
000046  ed8d0a01          VSTR     s0,[sp,#4]
;;;284    	data_to_send[_cnt++]=BYTE3(_temp);
00004a  f89d2007          LDRB     r2,[sp,#7]
00004e  4621              MOV      r1,r4
000050  1c64              ADDS     r4,r4,#1
000052  5442              STRB     r2,[r0,r1]
;;;285    	data_to_send[_cnt++]=BYTE2(_temp);
000054  f89d2006          LDRB     r2,[sp,#6]
000058  4621              MOV      r1,r4
00005a  1c64              ADDS     r4,r4,#1
00005c  5442              STRB     r2,[r0,r1]
;;;286    	data_to_send[_cnt++]=BYTE1(_temp);
00005e  f89d2005          LDRB     r2,[sp,#5]
000062  4621              MOV      r1,r4
000064  1c64              ADDS     r4,r4,#1
000066  5442              STRB     r2,[r0,r1]
;;;287    	data_to_send[_cnt++]=BYTE0(_temp);
000068  f89d2004          LDRB     r2,[sp,#4]
00006c  4620              MOV      r0,r4
00006e  1c61              ADDS     r1,r4,#1
000070  b2cc              UXTB     r4,r1
000072  497f              LDR      r1,|L6.624|
000074  540a              STRB     r2,[r1,r0]
;;;288    	
;;;289    	_temp = *temp1;
000076  ed970a00          VLDR     s0,[r7,#0]
00007a  ed8d0a01          VSTR     s0,[sp,#4]
;;;290    	data_to_send[_cnt++]=BYTE3(_temp);
00007e  f89d2007          LDRB     r2,[sp,#7]
000082  4620              MOV      r0,r4
000084  1c61              ADDS     r1,r4,#1
000086  b2cc              UXTB     r4,r1
000088  4979              LDR      r1,|L6.624|
00008a  540a              STRB     r2,[r1,r0]
;;;291    	data_to_send[_cnt++]=BYTE2(_temp);
00008c  f89d2006          LDRB     r2,[sp,#6]
000090  4620              MOV      r0,r4
000092  1c61              ADDS     r1,r4,#1
000094  b2cc              UXTB     r4,r1
000096  4976              LDR      r1,|L6.624|
000098  540a              STRB     r2,[r1,r0]
;;;292    	data_to_send[_cnt++]=BYTE1(_temp);
00009a  f89d2005          LDRB     r2,[sp,#5]
00009e  4621              MOV      r1,r4
0000a0  1c60              ADDS     r0,r4,#1
0000a2  b2c4              UXTB     r4,r0
0000a4  4872              LDR      r0,|L6.624|
0000a6  5442              STRB     r2,[r0,r1]
;;;293    	data_to_send[_cnt++]=BYTE0(_temp);
0000a8  f89d2004          LDRB     r2,[sp,#4]
0000ac  4620              MOV      r0,r4
0000ae  1c61              ADDS     r1,r4,#1
0000b0  b2cc              UXTB     r4,r1
0000b2  496f              LDR      r1,|L6.624|
0000b4  540a              STRB     r2,[r1,r0]
;;;294    
;;;295    	_temp = *temp2;
0000b6  ed980a00          VLDR     s0,[r8,#0]
0000ba  ed8d0a01          VSTR     s0,[sp,#4]
;;;296    	data_to_send[_cnt++]=BYTE3(_temp);
0000be  f89d2007          LDRB     r2,[sp,#7]
0000c2  4620              MOV      r0,r4
0000c4  1c61              ADDS     r1,r4,#1
0000c6  b2cc              UXTB     r4,r1
0000c8  4969              LDR      r1,|L6.624|
0000ca  540a              STRB     r2,[r1,r0]
;;;297    	data_to_send[_cnt++]=BYTE2(_temp);
0000cc  f89d2006          LDRB     r2,[sp,#6]
0000d0  4620              MOV      r0,r4
0000d2  1c61              ADDS     r1,r4,#1
0000d4  b2cc              UXTB     r4,r1
0000d6  4966              LDR      r1,|L6.624|
0000d8  540a              STRB     r2,[r1,r0]
;;;298    	data_to_send[_cnt++]=BYTE1(_temp);
0000da  f89d2005          LDRB     r2,[sp,#5]
0000de  4620              MOV      r0,r4
0000e0  1c61              ADDS     r1,r4,#1
0000e2  b2cc              UXTB     r4,r1
0000e4  4962              LDR      r1,|L6.624|
0000e6  540a              STRB     r2,[r1,r0]
;;;299    	data_to_send[_cnt++]=BYTE0(_temp);
0000e8  f89d2004          LDRB     r2,[sp,#4]
0000ec  4620              MOV      r0,r4
0000ee  1c61              ADDS     r1,r4,#1
0000f0  b2cc              UXTB     r4,r1
0000f2  495f              LDR      r1,|L6.624|
0000f4  540a              STRB     r2,[r1,r0]
;;;300    
;;;301    	_temp = *temp3;
0000f6  ed990a00          VLDR     s0,[r9,#0]
0000fa  ed8d0a01          VSTR     s0,[sp,#4]
;;;302    	data_to_send[_cnt++]=BYTE3(_temp);
0000fe  f89d2007          LDRB     r2,[sp,#7]
000102  4620              MOV      r0,r4
000104  1c61              ADDS     r1,r4,#1
000106  b2cc              UXTB     r4,r1
000108  4959              LDR      r1,|L6.624|
00010a  540a              STRB     r2,[r1,r0]
;;;303    	data_to_send[_cnt++]=BYTE2(_temp);
00010c  f89d2006          LDRB     r2,[sp,#6]
000110  4620              MOV      r0,r4
000112  1c61              ADDS     r1,r4,#1
000114  b2cc              UXTB     r4,r1
000116  4956              LDR      r1,|L6.624|
000118  540a              STRB     r2,[r1,r0]
;;;304    	data_to_send[_cnt++]=BYTE1(_temp);
00011a  f89d2005          LDRB     r2,[sp,#5]
00011e  4620              MOV      r0,r4
000120  1c61              ADDS     r1,r4,#1
000122  b2cc              UXTB     r4,r1
000124  4952              LDR      r1,|L6.624|
000126  540a              STRB     r2,[r1,r0]
;;;305    	data_to_send[_cnt++]=BYTE0(_temp);
000128  f89d2004          LDRB     r2,[sp,#4]
00012c  4620              MOV      r0,r4
00012e  1c61              ADDS     r1,r4,#1
000130  b2cc              UXTB     r4,r1
000132  494f              LDR      r1,|L6.624|
000134  540a              STRB     r2,[r1,r0]
;;;306    
;;;307    
;;;308    	_temp = *temp4;
000136  ed9b0a00          VLDR     s0,[r11,#0]
00013a  ed8d0a01          VSTR     s0,[sp,#4]
;;;309    	data_to_send[_cnt++]=BYTE3(_temp);
00013e  f89d2007          LDRB     r2,[sp,#7]
000142  4620              MOV      r0,r4
000144  1c61              ADDS     r1,r4,#1
000146  b2cc              UXTB     r4,r1
000148  4949              LDR      r1,|L6.624|
00014a  540a              STRB     r2,[r1,r0]
;;;310    	data_to_send[_cnt++]=BYTE2(_temp);
00014c  f89d2006          LDRB     r2,[sp,#6]
000150  4620              MOV      r0,r4
000152  1c61              ADDS     r1,r4,#1
000154  b2cc              UXTB     r4,r1
000156  4946              LDR      r1,|L6.624|
000158  540a              STRB     r2,[r1,r0]
;;;311    	data_to_send[_cnt++]=BYTE1(_temp);
00015a  f89d2005          LDRB     r2,[sp,#5]
00015e  4620              MOV      r0,r4
000160  1c61              ADDS     r1,r4,#1
000162  b2cc              UXTB     r4,r1
000164  4942              LDR      r1,|L6.624|
000166  540a              STRB     r2,[r1,r0]
;;;312    	data_to_send[_cnt++]=BYTE0(_temp);
000168  f89d2004          LDRB     r2,[sp,#4]
00016c  4620              MOV      r0,r4
00016e  1c61              ADDS     r1,r4,#1
000170  b2cc              UXTB     r4,r1
000172  493f              LDR      r1,|L6.624|
000174  540a              STRB     r2,[r1,r0]
;;;313    
;;;314    	_temp = *temp5;
000176  980d              LDR      r0,[sp,#0x34]
000178  ed900a00          VLDR     s0,[r0,#0]
00017c  ed8d0a01          VSTR     s0,[sp,#4]
;;;315    	data_to_send[_cnt++]=BYTE3(_temp);
000180  f89d2007          LDRB     r2,[sp,#7]
000184  4620              MOV      r0,r4
000186  1c61              ADDS     r1,r4,#1
000188  b2cc              UXTB     r4,r1
00018a  4939              LDR      r1,|L6.624|
00018c  540a              STRB     r2,[r1,r0]
;;;316    	data_to_send[_cnt++]=BYTE2(_temp);
00018e  f89d2006          LDRB     r2,[sp,#6]
000192  4620              MOV      r0,r4
000194  1c61              ADDS     r1,r4,#1
000196  b2cc              UXTB     r4,r1
000198  4935              LDR      r1,|L6.624|
00019a  540a              STRB     r2,[r1,r0]
;;;317    	data_to_send[_cnt++]=BYTE1(_temp);
00019c  f89d2005          LDRB     r2,[sp,#5]
0001a0  4620              MOV      r0,r4
0001a2  1c61              ADDS     r1,r4,#1
0001a4  b2cc              UXTB     r4,r1
0001a6  4932              LDR      r1,|L6.624|
0001a8  540a              STRB     r2,[r1,r0]
;;;318    	data_to_send[_cnt++]=BYTE0(_temp);
0001aa  f89d2004          LDRB     r2,[sp,#4]
0001ae  4620              MOV      r0,r4
0001b0  1c61              ADDS     r1,r4,#1
0001b2  b2cc              UXTB     r4,r1
0001b4  492e              LDR      r1,|L6.624|
0001b6  540a              STRB     r2,[r1,r0]
;;;319    
;;;320    	_temp1 = temp6;
0001b8  980e              LDR      r0,[sp,#0x38]
0001ba  9000              STR      r0,[sp,#0]
;;;321    //	data_to_send[_cnt++]=BYTE3(_temp);
;;;322    //	data_to_send[_cnt++]=BYTE2(_temp);
;;;323    	data_to_send[_cnt++]=BYTE1(_temp1);
0001bc  f89d2001          LDRB     r2,[sp,#1]
0001c0  4620              MOV      r0,r4
0001c2  1c61              ADDS     r1,r4,#1
0001c4  b2cc              UXTB     r4,r1
0001c6  492a              LDR      r1,|L6.624|
0001c8  540a              STRB     r2,[r1,r0]
;;;324    	data_to_send[_cnt++]=BYTE0(_temp1);
0001ca  f89d2000          LDRB     r2,[sp,#0]
0001ce  4620              MOV      r0,r4
0001d0  1c61              ADDS     r1,r4,#1
0001d2  b2cc              UXTB     r4,r1
0001d4  4926              LDR      r1,|L6.624|
0001d6  540a              STRB     r2,[r1,r0]
;;;325    	
;;;326    	_temp1 = thottle;
0001d8  980f              LDR      r0,[sp,#0x3c]
0001da  9000              STR      r0,[sp,#0]
;;;327    //	data_to_send[_cnt++]=BYTE3(_temp);
;;;328    //	data_to_send[_cnt++]=BYTE2(_temp);
;;;329    	data_to_send[_cnt++]=BYTE1(_temp1);
0001dc  f89d2001          LDRB     r2,[sp,#1]
0001e0  4620              MOV      r0,r4
0001e2  1c61              ADDS     r1,r4,#1
0001e4  b2cc              UXTB     r4,r1
0001e6  4922              LDR      r1,|L6.624|
0001e8  540a              STRB     r2,[r1,r0]
;;;330    	data_to_send[_cnt++]=BYTE0(_temp1);
0001ea  f89d2000          LDRB     r2,[sp,#0]
0001ee  4621              MOV      r1,r4
0001f0  1c60              ADDS     r0,r4,#1
0001f2  b2c4              UXTB     r4,r0
0001f4  481e              LDR      r0,|L6.624|
0001f6  5442              STRB     r2,[r0,r1]
;;;331    	
;;;332    		_temp1 = temp7;
0001f8  9810              LDR      r0,[sp,#0x40]
0001fa  9000              STR      r0,[sp,#0]
;;;333    // 	tx_buffer[_cnt++]=BYTE3(_temp1);
;;;334    // 	tx_buffer[_cnt++]=BYTE2(_temp1);
;;;335    	data_to_send[_cnt++]=BYTE1(_temp1);
0001fc  f89d2001          LDRB     r2,[sp,#1]
000200  4620              MOV      r0,r4
000202  1c61              ADDS     r1,r4,#1
000204  b2cc              UXTB     r4,r1
000206  491a              LDR      r1,|L6.624|
000208  540a              STRB     r2,[r1,r0]
;;;336    	data_to_send[_cnt++]=BYTE0(_temp1);
00020a  f89d2000          LDRB     r2,[sp,#0]
00020e  4620              MOV      r0,r4
000210  1c61              ADDS     r1,r4,#1
000212  b2cc              UXTB     r4,r1
000214  4916              LDR      r1,|L6.624|
000216  540a              STRB     r2,[r1,r0]
;;;337    	
;;;338    		_temp1 = temp8;
000218  9811              LDR      r0,[sp,#0x44]
00021a  9000              STR      r0,[sp,#0]
;;;339    // 	tx_buffer[_cnt++]=BYTE3(_temp1);
;;;340    // 	tx_buffer[_cnt++]=BYTE2(_temp1);
;;;341    	data_to_send[_cnt++]=BYTE1(_temp1);
00021c  f89d2001          LDRB     r2,[sp,#1]
000220  4620              MOV      r0,r4
000222  1c61              ADDS     r1,r4,#1
000224  b2cc              UXTB     r4,r1
000226  4912              LDR      r1,|L6.624|
000228  540a              STRB     r2,[r1,r0]
;;;342    	data_to_send[_cnt++]=BYTE0(_temp1);
00022a  f89d2000          LDRB     r2,[sp,#0]
00022e  4620              MOV      r0,r4
000230  1c61              ADDS     r1,r4,#1
000232  b2cc              UXTB     r4,r1
000234  490e              LDR      r1,|L6.624|
000236  540a              STRB     r2,[r1,r0]
;;;343    	
;;;344    	data_to_send[3] = _cnt-4;//数据长度 16-4=12
000238  1f20              SUBS     r0,r4,#4
00023a  70c8              STRB     r0,[r1,#3]
;;;345    
;;;346    	
;;;347    for(i=0;i<_cnt;i++) sum += data_to_send[i];	//求取校验值
00023c  bf00              NOP      
00023e  e006              B        |L6.590|
                  |L6.576|
000240  480b              LDR      r0,|L6.624|
000242  5d40              LDRB     r0,[r0,r5]
000244  4450              ADD      r0,r0,r10
000246  f0000aff          AND      r10,r0,#0xff
00024a  1c68              ADDS     r0,r5,#1
00024c  b2c5              UXTB     r5,r0
                  |L6.590|
00024e  42a5              CMP      r5,r4
000250  dbf6              BLT      |L6.576|
;;;348    	data_to_send[_cnt++]=sum;//校验值
000252  4620              MOV      r0,r4
000254  1c61              ADDS     r1,r4,#1
000256  b2cc              UXTB     r4,r1
000258  4905              LDR      r1,|L6.624|
00025a  f801a000          STRB     r10,[r1,r0]
;;;349    
;;;350    #if USE_UART1_FIFO_DMA
;;;351    	USART1_DMA_Send((uint8_t*)data_to_send,_cnt);
00025e  4621              MOV      r1,r4
000260  4803              LDR      r0,|L6.624|
000262  f7fffffe          BL       USART1_DMA_Send
;;;352    #else
;;;353    	USART1_SendString(_cnt,data_to_send);
;;;354    #endif
;;;355    }
000266  e8bd9ffc          POP      {r2-r12,pc}
;;;356    
                          ENDP

00026a  0000              DCW      0x0000
                  |L6.620|
00026c  00000000          DCFS     0x00000000 ; 0
                  |L6.624|
                          DCD      data_to_send

                          AREA ||i.USART1_SendString||, CODE, READONLY, ALIGN=2

                  USART1_SendString PROC
;;;356    
;;;357    void USART1_SendString(u8 len,u8 *data)
000000  b570              PUSH     {r4-r6,lr}
;;;358    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;359    	u8 i;
;;;360    	for(i=0;i<len;i++)
000006  2400              MOVS     r4,#0
000008  e00b              B        |L7.34|
                  |L7.10|
;;;361    	{
;;;362    		USART1->DR=(uint16_t)data[i];
00000a  5d30              LDRB     r0,[r6,r4]
00000c  4906              LDR      r1,|L7.40|
00000e  8088              STRH     r0,[r1,#4]
;;;363    		while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET);//等待发送结束
000010  bf00              NOP      
                  |L7.18|
000012  2140              MOVS     r1,#0x40
000014  4804              LDR      r0,|L7.40|
000016  f7fffffe          BL       USART_GetFlagStatus
00001a  2800              CMP      r0,#0
00001c  d0f9              BEQ      |L7.18|
00001e  1c60              ADDS     r0,r4,#1              ;360
000020  b2c4              UXTB     r4,r0                 ;360
                  |L7.34|
000022  42ac              CMP      r4,r5                 ;360
000024  dbf1              BLT      |L7.10|
;;;364    	}
;;;365    }
000026  bd70              POP      {r4-r6,pc}
;;;366    
                          ENDP

                  |L7.40|
                          DCD      0x40011000

                          AREA ||.ARM.exidx||, LINKORDER=||i.ANO_Data6_Send||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i.ANO_Data6_Send||
                          DCD      0x00000001

                          AREA ||area_number.9||, LINKORDER=||i.ANO_Data3_Send||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.ANO_Data3_Send||
                          DCD      0x00000001

                          AREA ||area_number.10||, LINKORDER=||i.ANO_Data2_Send||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.ANO_Data2_Send||
                          DCD      0x00000001

                          AREA ||area_number.11||, LINKORDER=||i.ANO_Data1_Send||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.ANO_Data1_Send||
                          DCD      0x00000001

                          AREA ||area_number.12||, LINKORDER=||i.ANO_ImuDataReturn||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.ANO_ImuDataReturn||
                          DCD      0x00000001

                          AREA ||area_number.13||, LINKORDER=||i.ANO_ImuDataReturn1||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.ANO_ImuDataReturn1||
                          DCD      0x00000001

                          AREA ||area_number.14||, LINKORDER=||i.USART1_SendString||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.USART1_SendString||
                          DCD      0x00000001

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  data_to_send
                          %        50

;*** Start embedded assembler ***

#line 1 "..\\..\\MySrc\\Data_Tramsfer.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_Data_Tramsfer_cpp_24967df3___Z7__REV16j|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_Data_Tramsfer_cpp_24967df3___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_Data_Tramsfer_cpp_24967df3___Z7__REVSHi|
#line 144
|__asm___17_Data_Tramsfer_cpp_24967df3___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___17_Data_Tramsfer_cpp_24967df3___Z5__RRXj|
#line 300
|__asm___17_Data_Tramsfer_cpp_24967df3___Z5__RRXj| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
