; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 --omf_browse=.\flash\obj\bsp.crf ..\..\User\bsp_stm32f4xx\src\bsp.c]
                          THUMB

                          AREA ||i.PWM_Init||, CODE, READONLY, ALIGN=2

                  PWM_Init PROC
;;;11     */
;;;12     void PWM_Init()
000000  f2413088          MOV      r0,#0x1388
;;;13     {
;;;14        delay_ms(5000);
000004  f8dfc014          LDR      r12,|L1.28|
000008  df00              SVC      #0x0
;;;15     	  PWM1=1000;
00000a  f44f707a          MOV      r0,#0x3e8
00000e  06c1              LSLS     r1,r0,#27
000010  6348              STR      r0,[r1,#0x34]
;;;16     		PWM2=1000;
000012  6388              STR      r0,[r1,#0x38]
;;;17     		PWM3=1000;
000014  63c8              STR      r0,[r1,#0x3c]
;;;18     		PWM4=1000;
000016  6408              STR      r0,[r1,#0x40]
;;;19     		
;;;20     }
000018  4770              BX       lr
;;;21     void bsp_Init(void)
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      rt_dly_wait

                          AREA ||i.bsp_Idle||, CODE, READONLY, ALIGN=1

                  bsp_Idle PROC
;;;120    */
;;;121    void bsp_Idle(void)
000000  4770              BX       lr
;;;122    {
;;;123    	/* --- 喂狗 */
;;;124    
;;;125    	/* --- 让CPU进入休眠，由Systick定时中断唤醒或者其他中断唤醒 */
;;;126    
;;;127    	/* 对于 emWin 图形库，可以插入图形库需要的轮询函数 */
;;;128    	//GUI_Exec();
;;;129    
;;;130    	/* 对于 uIP 协议实现，可以插入uip轮询函数 */
;;;131    }
                          ENDP


                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=2

                  bsp_Init PROC
;;;20     }
;;;21     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;22     {
;;;23     	
;;;24     	/*
;;;25     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;26     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;27     
;;;28     		系统时钟缺省配置为168MHz，如果需要更改，可以修改 system_stm32f4xx.c 文件
;;;29     	*/
;;;30     //	ESC_Init0();
;;;31     	UsasrFrameInit();
000002  f7fffffe          BL       UsasrFrameInit
;;;32     	bsp_InitUart();
000006  f7fffffe          BL       bsp_InitUart
;;;33     	bsp_InitLed();
00000a  f7fffffe          BL       bsp_InitLed
;;;34     //	bsp_InitSoftTimer();
;;;35     	bsp_InitHardTimer();
00000e  f7fffffe          BL       bsp_InitHardTimer
;;;36     //	bsp_InitUart(); 	/* 初始化串口 */
;;;37     //	bsp_InitKey();
;;;38     //	bsp_InitEXTI();
;;;39     	
;;;40     	Initial_System_Timer();
000012  f7fffffe          BL       Initial_System_Timer
;;;41     //	RunTime(StartCheck);
;;;42     	/* 针对不同的应用程序，添加需要的底层驱动模块初始化函数 */
;;;43     	bsp_RC_Init();
000016  f7fffffe          BL       bsp_RC_Init
;;;44     
;;;45     	TIM2_PWM_Configuration();
00001a  f7fffffe          BL       TIM2_PWM_Configuration
;;;46     	TIM3_PWM_Configuration();
00001e  f7fffffe          BL       TIM3_PWM_Configuration
;;;47     	
;;;48     //	Turn_PlateMotor_IO_Configuratuion();
;;;49     //	Turnplate_motor_cofiguration();
;;;50     //	delay_ms(1500);
;;;51     //	ESC_Init0();
;;;52     //	delay_ms(1500);
;;;53     
;;;54     //	ESC_Init();
;;;55     //	bsp_InitEXTI();
;;;56     //	ExtiGpioInit();
;;;57     //	while(1)
;;;58     //	{
;;;59     //		PWM1 = 700;
;;;60     //		PWM2 = 700;
;;;61     //		PWM3 = 700;
;;;62     //	}
;;;63     	UsartFrame_Init();
000022  f7fffffe          BL       UsartFrame_Init
;;;64     	
;;;65     	if(MPU_Init())
000026  f7fffffe          BL       MPU_Init
00002a  b110              CBZ      r0,|L3.50|
;;;66     	{
;;;67     		u1_printf("MPU Init Error\r\n");
00002c  a004              ADR      r0,|L3.64|
00002e  f7fffffe          BL       u1_printf
                  |L3.50|
;;;68     	}
;;;69     	 MPU6050_Data_Check_(&OffSet);
000032  4808              LDR      r0,|L3.84|
000034  f7fffffe          BL       MPU6050_Data_Check_
;;;70     	
;;;71     //	while(1)
;;;72     //	{
;;;73     //		{
;;;74     //		short gx,gy,gz;
;;;75     //		MPU_Get_Gyroscope(&gx,&gy,&gz);
;;;76     //		u1_printf("%d\t%d\t%d\r\n",gx,gy,gz);
;;;77     //		}
;;;78     //		
;;;79     //	}
;;;80     		PWM_Init();
000038  f7fffffe          BL       PWM_Init
;;;81     
;;;82     }
00003c  bd10              POP      {r4,pc}
;;;83     
                          ENDP

00003e  0000              DCW      0x0000
                  |L3.64|
000040  4d505520          DCB      "MPU Init Error\r\n",0
000044  496e6974
000048  20457272
00004c  6f720d0a
000050  00      
000051  00                DCB      0
000052  00                DCB      0
000053  00                DCB      0
                  |L3.84|
                          DCD      OffSet

                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer10ms PROC
;;;92     */
;;;93     void bsp_RunPer10ms(void)
000000  4770              BX       lr
;;;94     {
;;;95     	// bsp_KeyScan();
;;;96     }
;;;97     
                          ENDP


                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1ms PROC
;;;106    */
;;;107    void bsp_RunPer1ms(void)
000000  4770              BX       lr
;;;108    {
;;;109    	//TOUCH_Scan();	/* 触摸扫描 */
;;;110    }
;;;111    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_PWM_Init____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_PWM_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_PWM_Init____REVSH|
#line 144
|__asm___5_bsp_c_PWM_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_PWM_Init____RRX|
#line 300
|__asm___5_bsp_c_PWM_Init____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
