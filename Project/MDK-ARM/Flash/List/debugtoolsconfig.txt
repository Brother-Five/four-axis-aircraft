; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\flash\obj\debugtoolsconfig.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\debugtoolsconfig.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\RTX\inc -I..\..\RTX\portable -I..\..\MySrc -I..\..\Libraries -I..\..\MySrc\ostask -I..\..\MySrc\MPU6050 -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F40_41xxx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DARM_MATH_CM4 --omf_browse=.\flash\obj\debugtoolsconfig.crf ..\..\MySrc\DebugToolsConfig.cpp]
                          THUMB

                          AREA ||i.DebugToolsInit||, CODE, READONLY, ALIGN=1

                  DebugToolsInit PROC
;;;114    
;;;115    void DebugToolsInit(void)
000000  b510              PUSH     {r4,lr}
;;;116    {
;;;117    	Initial_System_Timer();
000002  f7fffffe          BL       Initial_System_Timer
;;;118    //	UsartDMA_Init();
;;;119    //	TIMResetModeForDMA();
;;;120    //	EXTI_Configuration();
;;;121    }
000006  bd10              POP      {r4,pc}
;;;122    
                          ENDP


                          AREA ||i._Z10SetRollpidfff||, CODE, READONLY, ALIGN=2

                  _Z10SetRollpidfff PROC ; SetRollpid(float, float, float)
;;;25     }
;;;26     void SetRollpid(float m_Kp, float m_Ki, float m_Kd)
000000  b500              PUSH     {lr}
;;;27     {
000002  ed2d8b0a          VPUSH    {d8-d12}
000006  b085              SUB      sp,sp,#0x14
000008  eeb08a40          VMOV.F32 s16,s0
00000c  eef08a60          VMOV.F32 s17,s1
000010  eeb09a41          VMOV.F32 s18,s2
;;;28     	Rollpid.kp=m_Kp;
000014  4812              LDR      r0,|L2.96|
000016  ed808a03          VSTR     s16,[r0,#0xc]
;;;29     	Rollpid.ki=m_Ki;
00001a  edc08a04          VSTR     s17,[r0,#0x10]
;;;30     	Rollpid.kd=m_Kd;
00001e  ed809a05          VSTR     s18,[r0,#0x14]
;;;31     	u1_printf("p:%f\ti:%f\td:%f\r\n",m_Kp,m_Ki,m_Kd);
000022  ee190a10          VMOV     r0,s18
000026  f7fffffe          BL       __aeabi_f2d
00002a  ec410b1a          VMOV     d10,r0,r1
00002e  ee180a90          VMOV     r0,s17
000032  f7fffffe          BL       __aeabi_f2d
000036  ec410b1b          VMOV     d11,r0,r1
00003a  ee180a10          VMOV     r0,s16
00003e  f7fffffe          BL       __aeabi_f2d
000042  ec410b1c          VMOV     d12,r0,r1
000046  ed8dab02          VSTR     d10,[sp,#8]
00004a  ed8dbb00          VSTR     d11,[sp,#0]
00004e  ec532b1c          VMOV     r2,r3,d12
000052  a004              ADR      r0,|L2.100|
000054  f7fffffe          BL       u1_printf
;;;32     }
000058  b005              ADD      sp,sp,#0x14
00005a  ecbd8b0a          VPOP     {d8-d12}
00005e  bd00              POP      {pc}
;;;33     void SetYawpid(float m_Kp, float m_Ki, float m_Kd)
                          ENDP

                  |L2.96|
                          DCD      Rollpid
                  |L2.100|
000064  703a2566          DCB      "p:%f\ti:%f\td:%f\r\n",0
000068  09693a25
00006c  6609643a
000070  25660d0a
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0

                          AREA ||i._Z11Rollpid_GETf||, CODE, READONLY, ALIGN=2

                  _Z11Rollpid_GETf PROC ; Rollpid_GET(float)
;;;64     
;;;65     void Rollpid_GET(float on)
000000  b500              PUSH     {lr}
;;;66     {
000002  ed2d8b08          VPUSH    {d8-d11}
000006  b085              SUB      sp,sp,#0x14
000008  eeb08a40          VMOV.F32 s16,s0
;;;67     	if(on)
00000c  eeb58ac0          VCMPE.F32 s16,#0.0
000010  eef1fa10          VMRS     APSR_nzcv,FPSCR
000014  d026              BEQ      |L3.100|
;;;68     	u1_printf("p:%f\ti:%f\td:%f\r\n",Rollpid.kp,Rollpid.ki,Rollpid.kd);
000016  4815              LDR      r0,|L3.108|
000018  ed900a05          VLDR     s0,[r0,#0x14]
00001c  ee101a10          VMOV     r1,s0
000020  4608              MOV      r0,r1
000022  f7fffffe          BL       __aeabi_f2d
000026  ec410b19          VMOV     d9,r0,r1
00002a  4810              LDR      r0,|L3.108|
00002c  ed900a04          VLDR     s0,[r0,#0x10]
000030  ee101a10          VMOV     r1,s0
000034  4608              MOV      r0,r1
000036  f7fffffe          BL       __aeabi_f2d
00003a  ec410b1a          VMOV     d10,r0,r1
00003e  480b              LDR      r0,|L3.108|
000040  ed900a03          VLDR     s0,[r0,#0xc]
000044  ee101a10          VMOV     r1,s0
000048  4608              MOV      r0,r1
00004a  f7fffffe          BL       __aeabi_f2d
00004e  ec410b1b          VMOV     d11,r0,r1
000052  ed8d9b02          VSTR     d9,[sp,#8]
000056  ed8dab00          VSTR     d10,[sp,#0]
00005a  ec532b1b          VMOV     r2,r3,d11
00005e  a004              ADR      r0,|L3.112|
000060  f7fffffe          BL       u1_printf
                  |L3.100|
;;;69     }
000064  b005              ADD      sp,sp,#0x14
000066  ecbd8b08          VPOP     {d8-d11}
00006a  bd00              POP      {pc}
;;;70     
                          ENDP

                  |L3.108|
                          DCD      Rollpid
                  |L3.112|
000070  703a2566          DCB      "p:%f\ti:%f\td:%f\r\n",0
000074  09693a25
000078  6609643a
00007c  25660d0a
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0

                          AREA ||i._Z11SetPitchPidfff||, CODE, READONLY, ALIGN=2

                  _Z11SetPitchPidfff PROC ; SetPitchPid(float, float, float)
;;;18     extern PID Gyropitchpid,Gyrorollpid,Gyroyawpid;
;;;19     void SetPitchPid(float m_Kp, float m_Ki,float m_Kd)
000000  b500              PUSH     {lr}
;;;20     {
000002  ed2d8b0a          VPUSH    {d8-d12}
000006  b085              SUB      sp,sp,#0x14
000008  eeb08a40          VMOV.F32 s16,s0
00000c  eef08a60          VMOV.F32 s17,s1
000010  eeb09a41          VMOV.F32 s18,s2
;;;21     	Pitchpid.kp=m_Kp;
000014  4812              LDR      r0,|L4.96|
000016  ed808a03          VSTR     s16,[r0,#0xc]
;;;22     	Pitchpid.ki=m_Ki;
00001a  edc08a04          VSTR     s17,[r0,#0x10]
;;;23     	Pitchpid.kd=m_Kd;
00001e  ed809a05          VSTR     s18,[r0,#0x14]
;;;24     	u1_printf("p:%f\ti:%f\td:%f\r\n",m_Kp,m_Ki,m_Kd);
000022  ee190a10          VMOV     r0,s18
000026  f7fffffe          BL       __aeabi_f2d
00002a  ec410b1a          VMOV     d10,r0,r1
00002e  ee180a90          VMOV     r0,s17
000032  f7fffffe          BL       __aeabi_f2d
000036  ec410b1b          VMOV     d11,r0,r1
00003a  ee180a10          VMOV     r0,s16
00003e  f7fffffe          BL       __aeabi_f2d
000042  ec410b1c          VMOV     d12,r0,r1
000046  ed8dab02          VSTR     d10,[sp,#8]
00004a  ed8dbb00          VSTR     d11,[sp,#0]
00004e  ec532b1c          VMOV     r2,r3,d12
000052  a004              ADR      r0,|L4.100|
000054  f7fffffe          BL       u1_printf
;;;25     }
000058  b005              ADD      sp,sp,#0x14
00005a  ecbd8b0a          VPOP     {d8-d12}
00005e  bd00              POP      {pc}
;;;26     void SetRollpid(float m_Kp, float m_Ki, float m_Kd)
                          ENDP

                  |L4.96|
                          DCD      Pitchpid
                  |L4.100|
000064  703a2566          DCB      "p:%f\ti:%f\td:%f\r\n",0
000068  09693a25
00006c  6609643a
000070  25660d0a
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0

                          AREA ||i._Z12PitchPid_GETf||, CODE, READONLY, ALIGN=2

                  _Z12PitchPid_GETf PROC ; PitchPid_GET(float)
;;;58     }
;;;59     void PitchPid_GET(float on)
000000  b500              PUSH     {lr}
;;;60     {
000002  ed2d8b08          VPUSH    {d8-d11}
000006  b085              SUB      sp,sp,#0x14
000008  eeb08a40          VMOV.F32 s16,s0
;;;61     	if(on)
00000c  eeb58ac0          VCMPE.F32 s16,#0.0
000010  eef1fa10          VMRS     APSR_nzcv,FPSCR
000014  d026              BEQ      |L5.100|
;;;62     	u1_printf("p:%f\ti:%f\td:%f\r\n",Pitchpid.kp,Pitchpid.ki,Pitchpid.kd);
000016  4815              LDR      r0,|L5.108|
000018  ed900a05          VLDR     s0,[r0,#0x14]
00001c  ee101a10          VMOV     r1,s0
000020  4608              MOV      r0,r1
000022  f7fffffe          BL       __aeabi_f2d
000026  ec410b19          VMOV     d9,r0,r1
00002a  4810              LDR      r0,|L5.108|
00002c  ed900a04          VLDR     s0,[r0,#0x10]
000030  ee101a10          VMOV     r1,s0
000034  4608              MOV      r0,r1
000036  f7fffffe          BL       __aeabi_f2d
00003a  ec410b1a          VMOV     d10,r0,r1
00003e  480b              LDR      r0,|L5.108|
000040  ed900a03          VLDR     s0,[r0,#0xc]
000044  ee101a10          VMOV     r1,s0
000048  4608              MOV      r0,r1
00004a  f7fffffe          BL       __aeabi_f2d
00004e  ec410b1b          VMOV     d11,r0,r1
000052  ed8d9b02          VSTR     d9,[sp,#8]
000056  ed8dab00          VSTR     d10,[sp,#0]
00005a  ec532b1b          VMOV     r2,r3,d11
00005e  a004              ADR      r0,|L5.112|
000060  f7fffffe          BL       u1_printf
                  |L5.100|
;;;63     }
000064  b005              ADD      sp,sp,#0x14
000066  ecbd8b08          VPOP     {d8-d11}
00006a  bd00              POP      {pc}
;;;64     
                          ENDP

                  |L5.108|
                          DCD      Pitchpid
                  |L5.112|
000070  703a2566          DCB      "p:%f\ti:%f\td:%f\r\n",0
000074  09693a25
000078  6609643a
00007c  25660d0a
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0

                          AREA ||i._Z13SetGyroyawpidff||, CODE, READONLY, ALIGN=2

                  _Z13SetGyroyawpidff PROC ; SetGyroyawpid(float, float)
;;;52     }
;;;53     void SetGyroyawpid(float m_Kp, float m_Kd)
000000  b500              PUSH     {lr}
;;;54     {
000002  ed2d8b06          VPUSH    {d8-d10}
000006  b083              SUB      sp,sp,#0xc
000008  eeb08a40          VMOV.F32 s16,s0
00000c  eef08a60          VMOV.F32 s17,s1
;;;55     	Pitchpid.kp=m_Kp;
000010  480d              LDR      r0,|L6.72|
000012  ed808a03          VSTR     s16,[r0,#0xc]
;;;56     	Pitchpid.ki=m_Kd;
000016  edc08a04          VSTR     s17,[r0,#0x10]
;;;57     	u1_printf("p:%f\ti:%f\td:%f\r\n",m_Kp,m_Kd);
00001a  ee180a90          VMOV     r0,s17
00001e  f7fffffe          BL       __aeabi_f2d
000022  ec410b19          VMOV     d9,r0,r1
000026  ee180a10          VMOV     r0,s16
00002a  f7fffffe          BL       __aeabi_f2d
00002e  ec410b1a          VMOV     d10,r0,r1
000032  ed8d9b00          VSTR     d9,[sp,#0]
000036  ec532b1a          VMOV     r2,r3,d10
00003a  a004              ADR      r0,|L6.76|
00003c  f7fffffe          BL       u1_printf
;;;58     }
000040  b003              ADD      sp,sp,#0xc
000042  ecbd8b06          VPOP     {d8-d10}
000046  bd00              POP      {pc}
;;;59     void PitchPid_GET(float on)
                          ENDP

                  |L6.72|
                          DCD      Pitchpid
                  |L6.76|
00004c  703a2566          DCB      "p:%f\ti:%f\td:%f\r\n",0
000050  09693a25
000054  6609643a
000058  25660d0a
00005c  00      
00005d  00                DCB      0
00005e  00                DCB      0
00005f  00                DCB      0

                          AREA ||i._Z14SetGyrorollpidff||, CODE, READONLY, ALIGN=2

                  _Z14SetGyrorollpidff PROC ; SetGyrorollpid(float, float)
;;;46     }
;;;47     void SetGyrorollpid(float m_Kp, float m_Kd)
000000  b500              PUSH     {lr}
;;;48     {
000002  ed2d8b06          VPUSH    {d8-d10}
000006  b083              SUB      sp,sp,#0xc
000008  eeb08a40          VMOV.F32 s16,s0
00000c  eef08a60          VMOV.F32 s17,s1
;;;49     	Pitchpid.kp=m_Kp;
000010  480d              LDR      r0,|L7.72|
000012  ed808a03          VSTR     s16,[r0,#0xc]
;;;50     	Pitchpid.kd=m_Kd;
000016  edc08a05          VSTR     s17,[r0,#0x14]
;;;51     	u1_printf("p:%f\ti:%f\td:%f\r\n",m_Kp,m_Kd);
00001a  ee180a90          VMOV     r0,s17
00001e  f7fffffe          BL       __aeabi_f2d
000022  ec410b19          VMOV     d9,r0,r1
000026  ee180a10          VMOV     r0,s16
00002a  f7fffffe          BL       __aeabi_f2d
00002e  ec410b1a          VMOV     d10,r0,r1
000032  ed8d9b00          VSTR     d9,[sp,#0]
000036  ec532b1a          VMOV     r2,r3,d10
00003a  a004              ADR      r0,|L7.76|
00003c  f7fffffe          BL       u1_printf
;;;52     }
000040  b003              ADD      sp,sp,#0xc
000042  ecbd8b06          VPOP     {d8-d10}
000046  bd00              POP      {pc}
;;;53     void SetGyroyawpid(float m_Kp, float m_Kd)
                          ENDP

                  |L7.72|
                          DCD      Pitchpid
                  |L7.76|
00004c  703a2566          DCB      "p:%f\ti:%f\td:%f\r\n",0
000050  09693a25
000054  6609643a
000058  25660d0a
00005c  00      
00005d  00                DCB      0
00005e  00                DCB      0
00005f  00                DCB      0

                          AREA ||i._Z15SetGyropitchpidff||, CODE, READONLY, ALIGN=2

                  _Z15SetGyropitchpidff PROC ; SetGyropitchpid(float, float)
;;;40     
;;;41     void SetGyropitchpid(float m_Kp, float m_Kd)
000000  b500              PUSH     {lr}
;;;42     {
000002  ed2d8b06          VPUSH    {d8-d10}
000006  b083              SUB      sp,sp,#0xc
000008  eeb08a40          VMOV.F32 s16,s0
00000c  eef08a60          VMOV.F32 s17,s1
;;;43     	Pitchpid.kp=m_Kp;
000010  480d              LDR      r0,|L8.72|
000012  ed808a03          VSTR     s16,[r0,#0xc]
;;;44     	Pitchpid.kd=m_Kd;
000016  edc08a05          VSTR     s17,[r0,#0x14]
;;;45     	u1_printf("p:%f\ti:%f\td:%f\r\n",m_Kp,m_Kd);
00001a  ee180a90          VMOV     r0,s17
00001e  f7fffffe          BL       __aeabi_f2d
000022  ec410b19          VMOV     d9,r0,r1
000026  ee180a10          VMOV     r0,s16
00002a  f7fffffe          BL       __aeabi_f2d
00002e  ec410b1a          VMOV     d10,r0,r1
000032  ed8d9b00          VSTR     d9,[sp,#0]
000036  ec532b1a          VMOV     r2,r3,d10
00003a  a004              ADR      r0,|L8.76|
00003c  f7fffffe          BL       u1_printf
;;;46     }
000040  b003              ADD      sp,sp,#0xc
000042  ecbd8b06          VPOP     {d8-d10}
000046  bd00              POP      {pc}
;;;47     void SetGyrorollpid(float m_Kp, float m_Kd)
                          ENDP

                  |L8.72|
                          DCD      Pitchpid
                  |L8.76|
00004c  703a2566          DCB      "p:%f\ti:%f\td:%f\r\n",0
000050  09693a25
000054  6609643a
000058  25660d0a
00005c  00      
00005d  00                DCB      0
00005e  00                DCB      0
00005f  00                DCB      0

                          AREA ||i._Z4tipsv||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  _Z4tipsv PROC ; tips()
;;;96     
;;;4      void tips(void)
000000  b510              PUSH     {r4,lr}
;;;5      {
;;;6      	unsigned char i;
;;;7      	for(i=0;i<dev.fnum-1;i++)
000002  2400              MOVS     r4,#0
000004  e00b              B        |L9.30|
                  |L9.6|
;;;8      	{
;;;9      		printf("%s\r\n",dev.tab[i].tips);
000006  4809              LDR      r0,|L9.44|
000008  6800              LDR      r0,[r0,#0]  ; dev
00000a  eb040244          ADD      r2,r4,r4,LSL #1
00000e  eb000082          ADD      r0,r0,r2,LSL #2
000012  6881              LDR      r1,[r0,#8]
000014  a006              ADR      r0,|L9.48|
000016  f7fffffe          BL       __2printf
00001a  1c60              ADDS     r0,r4,#1              ;7
00001c  b2c4              UXTB     r4,r0                 ;7
                  |L9.30|
00001e  4803              LDR      r0,|L9.44|
000020  7900              LDRB     r0,[r0,#4]            ;7  ; dev
000022  1e40              SUBS     r0,r0,#1              ;7
000024  42a0              CMP      r0,r4                 ;7
000026  dcee              BGT      |L9.6|
;;;10     	}
;;;11     }
000028  bd10              POP      {r4,pc}
;;;12     
                          ENDP

00002a  0000              DCW      0x0000
                  |L9.44|
                          DCD      ||dev||
                  |L9.48|
000030  25730d0a          DCB      "%s\r\n",0
000034  00      
000035  00                DCB      0
000036  00                DCB      0
000037  00                DCB      0

                          AREA ||i._Z6SetPWMff||, CODE, READONLY, ALIGN=2

                  _Z6SetPWMff PROC ; SetPWM(float, float)
;;;70     
;;;71     void SetPWM(float index,float value){
000000  b510              PUSH     {r4,lr}
000002  ed2d8b02          VPUSH    {d8}
000006  eef08a40          VMOV.F32 s17,s0
00000a  eeb08a60          VMOV.F32 s16,s1
;;;72     	switch((u8)index)
00000e  eebc0ae8          VCVT.U32.F32 s0,s17
000012  ee100a10          VMOV     r0,s0
000016  b2c0              UXTB     r0,r0
000018  2801              CMP      r0,#1
00001a  d006              BEQ      |L10.42|
00001c  2802              CMP      r0,#2
00001e  d00c              BEQ      |L10.58|
000020  2803              CMP      r0,#3
000022  d012              BEQ      |L10.74|
000024  2804              CMP      r0,#4
000026  d120              BNE      |L10.106|
000028  e017              B        |L10.90|
                  |L10.42|
;;;73     	{
;;;74     		case 1:PWM1 = (int)value;break;
00002a  eebd0ac8          VCVT.S32.F32 s0,s16
00002e  ee100a10          VMOV     r0,s0
000032  f04f4180          MOV      r1,#0x40000000
000036  6348              STR      r0,[r1,#0x34]
000038  e017              B        |L10.106|
                  |L10.58|
;;;75     		case 2:PWM2 = (int)value;break;
00003a  eebd0ac8          VCVT.S32.F32 s0,s16
00003e  ee100a10          VMOV     r0,s0
000042  f04f4180          MOV      r1,#0x40000000
000046  6388              STR      r0,[r1,#0x38]
000048  e00f              B        |L10.106|
                  |L10.74|
;;;76     		case 3:PWM3 = (int)value;break;
00004a  eebd0ac8          VCVT.S32.F32 s0,s16
00004e  ee100a10          VMOV     r0,s0
000052  f04f4180          MOV      r1,#0x40000000
000056  63c8              STR      r0,[r1,#0x3c]
000058  e007              B        |L10.106|
                  |L10.90|
;;;77     		case 4:PWM4 = (int)value;break;
00005a  eebd0ac8          VCVT.S32.F32 s0,s16
00005e  ee100a10          VMOV     r0,s0
000062  f04f4180          MOV      r1,#0x40000000
000066  6408              STR      r0,[r1,#0x40]
000068  bf00              NOP      
                  |L10.106|
00006a  bf00              NOP                            ;74
;;;78     	}
;;;79     	u1_printf("%d:%d\r\n",(u8)index,(int)value);
00006c  eebc0ae8          VCVT.U32.F32 s0,s17
000070  ee100a10          VMOV     r0,s0
000074  b2c1              UXTB     r1,r0
000076  eebd0ac8          VCVT.S32.F32 s0,s16
00007a  ee102a10          VMOV     r2,s0
00007e  a003              ADR      r0,|L10.140|
000080  f7fffffe          BL       u1_printf
;;;80     }
000084  ecbd8b02          VPOP     {d8}
000088  bd10              POP      {r4,pc}
;;;81     //extern void SetPara_DR(float _DR_SPEED,float _PitchScale,float _YawScale,float CARFRAMEWEIGHT);
                          ENDP

00008a  0000              DCW      0x0000
                  |L10.140|
00008c  25643a25          DCB      "%d:%d\r\n",0
000090  640d0a00

                          AREA ||i._Z9SetYawpidfff||, CODE, READONLY, ALIGN=2

                  _Z9SetYawpidfff PROC ; SetYawpid(float, float, float)
;;;32     }
;;;33     void SetYawpid(float m_Kp, float m_Ki, float m_Kd)
000000  b500              PUSH     {lr}
;;;34     {
000002  ed2d8b0a          VPUSH    {d8-d12}
000006  b085              SUB      sp,sp,#0x14
000008  eeb08a40          VMOV.F32 s16,s0
00000c  eef08a60          VMOV.F32 s17,s1
000010  eeb09a41          VMOV.F32 s18,s2
;;;35     	Yawpid.kp=m_Kp;
000014  4812              LDR      r0,|L11.96|
000016  ed808a03          VSTR     s16,[r0,#0xc]
;;;36     	Yawpid.ki=m_Ki;
00001a  edc08a04          VSTR     s17,[r0,#0x10]
;;;37     	Yawpid.kd=m_Kd;
00001e  ed809a05          VSTR     s18,[r0,#0x14]
;;;38     	u1_printf("p:%f\ti:%f\td:%f\r\n",m_Kp,m_Ki,m_Kd);
000022  ee190a10          VMOV     r0,s18
000026  f7fffffe          BL       __aeabi_f2d
00002a  ec410b1a          VMOV     d10,r0,r1
00002e  ee180a90          VMOV     r0,s17
000032  f7fffffe          BL       __aeabi_f2d
000036  ec410b1b          VMOV     d11,r0,r1
00003a  ee180a10          VMOV     r0,s16
00003e  f7fffffe          BL       __aeabi_f2d
000042  ec410b1c          VMOV     d12,r0,r1
000046  ed8dab02          VSTR     d10,[sp,#8]
00004a  ed8dbb00          VSTR     d11,[sp,#0]
00004e  ec532b1c          VMOV     r2,r3,d12
000052  a004              ADR      r0,|L11.100|
000054  f7fffffe          BL       u1_printf
;;;39     }
000058  b005              ADD      sp,sp,#0x14
00005a  ecbd8b0a          VPOP     {d8-d12}
00005e  bd00              POP      {pc}
;;;40     
                          ENDP

                  |L11.96|
                          DCD      Yawpid
                  |L11.100|
000064  703a2566          DCB      "p:%f\ti:%f\td:%f\r\n",0
000068  09693a25
00006c  6609643a
000070  25660d0a
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0

                          AREA ||.ARM.exidx||, LINKORDER=||i._Z4tipsv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._Z4tipsv||
                          DCD      0x00000001

                          AREA ||area_number.13||, LINKORDER=||i._Z11SetPitchPidfff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z11SetPitchPidfff||
                          DCD      0x00000001

                          AREA ||area_number.14||, LINKORDER=||i._Z10SetRollpidfff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z10SetRollpidfff||
                          DCD      0x00000001

                          AREA ||area_number.15||, LINKORDER=||i._Z9SetYawpidfff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z9SetYawpidfff||
                          DCD      0x00000001

                          AREA ||area_number.16||, LINKORDER=||i._Z15SetGyropitchpidff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.16||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z15SetGyropitchpidff||
                          DCD      0x00000001

                          AREA ||area_number.17||, LINKORDER=||i._Z14SetGyrorollpidff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z14SetGyrorollpidff||
                          DCD      0x00000001

                          AREA ||area_number.18||, LINKORDER=||i._Z13SetGyroyawpidff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.18||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z13SetGyroyawpidff||
                          DCD      0x00000001

                          AREA ||area_number.19||, LINKORDER=||i._Z12PitchPid_GETf||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z12PitchPid_GETf||
                          DCD      0x00000001

                          AREA ||area_number.20||, LINKORDER=||i._Z11Rollpid_GETf||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.20||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z11Rollpid_GETf||
                          DCD      0x00000001

                          AREA ||area_number.21||, LINKORDER=||i._Z6SetPWMff||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z6SetPWMff||
                          DCD      0x00000001

                          AREA ||area_number.22||, LINKORDER=||i.DebugToolsInit||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.22||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.DebugToolsInit||
                          DCD      0x00000001

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  53657450          DCB      "SetPitchPid",0
000004  69746368
000008  50696400
00000c  53657450          DCB      "SetPitchPid(float m_Kp, float m_Ki, float m_Kd)",0
000010  69746368
000014  50696428
000018  666c6f61
00001c  74206d5f
000020  4b702c20
000024  666c6f61
000028  74206d5f
00002c  4b692c20
000030  666c6f61
000034  74206d5f
000038  4b642900
00003c  53657452          DCB      "SetRollpid",0
000040  6f6c6c70
000044  696400  
000047  00                DCB      0
000048  53657452          DCB      "SetRollpid(float m_Kp, float m_Ki, float m_Kd)",0
00004c  6f6c6c70
000050  69642866
000054  6c6f6174
000058  206d5f4b
00005c  702c2066
000060  6c6f6174
000064  206d5f4b
000068  692c2066
00006c  6c6f6174
000070  206d5f4b
000074  642900  
000077  00                DCB      0
000078  53657459          DCB      "SetYawpid",0
00007c  61777069
000080  6400    
000082  00                DCB      0
000083  00                DCB      0
000084  53657459          DCB      "SetYawpid(float m_Kp, float m_Ki, float m_Kd)",0
000088  61777069
00008c  6428666c
000090  6f617420
000094  6d5f4b70
000098  2c20666c
00009c  6f617420
0000a0  6d5f4b69
0000a4  2c20666c
0000a8  6f617420
0000ac  6d5f4b64
0000b0  2900    
0000b2  00                DCB      0
0000b3  00                DCB      0
0000b4  53657447          DCB      "SetGyropitchpid",0
0000b8  79726f70
0000bc  69746368
0000c0  70696400
0000c4  53657447          DCB      "SetGyropitchpid(float m_Kp, float m_Kd)",0
0000c8  79726f70
0000cc  69746368
0000d0  70696428
0000d4  666c6f61
0000d8  74206d5f
0000dc  4b702c20
0000e0  666c6f61
0000e4  74206d5f
0000e8  4b642900
0000ec  53657447          DCB      "SetGyrorollpid",0
0000f0  79726f72
0000f4  6f6c6c70
0000f8  696400  
0000fb  00                DCB      0
0000fc  53657447          DCB      "SetGyrorollpid(float m_Kp, float m_Kd)",0
000100  79726f72
000104  6f6c6c70
000108  69642866
00010c  6c6f6174
000110  206d5f4b
000114  702c2066
000118  6c6f6174
00011c  206d5f4b
000120  642900  
000123  00                DCB      0
000124  53657447          DCB      "SetGyroyawpid",0
000128  79726f79
00012c  61777069
000130  6400    
000132  00                DCB      0
000133  00                DCB      0
000134  53657447          DCB      "SetGyroyawpid(float m_Kp, float m_Kd)",0
000138  79726f79
00013c  61777069
000140  6428666c
000144  6f617420
000148  6d5f4b70
00014c  2c20666c
000150  6f617420
000154  6d5f4b64
000158  2900    
00015a  00                DCB      0
00015b  00                DCB      0
00015c  53657450          DCB      "SetPWM",0
000160  574d00  
000163  00                DCB      0
000164  53657450          DCB      "SetPWM(float index,float value)",0
000168  574d2866
00016c  6c6f6174
000170  20696e64
000174  65782c66
000178  6c6f6174
00017c  2076616c
000180  75652900
000184  50697463          DCB      "PitchPid_GET",0
000188  68506964
00018c  5f474554
000190  00      
000191  00                DCB      0
000192  00                DCB      0
000193  00                DCB      0
000194  50697463          DCB      "PitchPid_GET(float on)",0
000198  68506964
00019c  5f474554
0001a0  28666c6f
0001a4  6174206f
0001a8  6e2900  
0001ab  00                DCB      0
0001ac  526f6c6c          DCB      "Rollpid_GET",0
0001b0  7069645f
0001b4  47455400
0001b8  526f6c6c          DCB      "Rollpid_GET(float on)",0
0001bc  7069645f
0001c0  47455428
0001c4  666c6f61
0001c8  74206f6e
0001cc  2900    
0001ce  00                DCB      0
0001cf  00                DCB      0
0001d0  74697073          DCB      "tips",0
0001d4  00      
0001d5  00                DCB      0
0001d6  00                DCB      0
0001d7  00                DCB      0
0001d8  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  nametab
                          DCD      _Z11SetPitchPidfff ; SetPitchPid(float, float, float)
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0xc
                          DCD      _Z10SetRollpidfff ; SetRollpid(float, float, float)
                          DCD      ||.conststring||+0x3c
                          DCD      ||.conststring||+0x48
                          DCD      _Z9SetYawpidfff ; SetYawpid(float, float, float)
                          DCD      ||.conststring||+0x78
                          DCD      ||.conststring||+0x84
                          DCD      _Z15SetGyropitchpidff ; SetGyropitchpid(float, float)
                          DCD      ||.conststring||+0xb4
                          DCD      ||.conststring||+0xc4
                          DCD      _Z14SetGyrorollpidff ; SetGyrorollpid(float, float)
                          DCD      ||.conststring||+0xec
                          DCD      ||.conststring||+0xfc
                          DCD      _Z13SetGyroyawpidff ; SetGyroyawpid(float, float)
                          DCD      ||.conststring||+0x124
                          DCD      ||.conststring||+0x134
                          DCD      _Z6SetPWMff ; SetPWM(float, float)
                          DCD      ||.conststring||+0x15c
                          DCD      ||.conststring||+0x164
                          DCD      _Z12PitchPid_GETf ; PitchPid_GET(float)
                          DCD      ||.conststring||+0x184
                          DCD      ||.conststring||+0x194
                          DCD      _Z11Rollpid_GETf ; Rollpid_GET(float)
                          DCD      ||.conststring||+0x1ac
                          DCD      ||.conststring||+0x1b8
                          DCD      _Z4tipsv ; tips()
                          DCD      ||.conststring||+0x1d0
                          DCD      ||.conststring||+0x1d8
                  ||dev||
                          DCD      nametab
00007c  0a000000          DCB      0x0a,0x00,0x00,0x00
                          %        80

;*** Start embedded assembler ***

#line 1 "..\\..\\MySrc\\DebugToolsConfig.cpp"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z7__REV16j|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z7__REV16j| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z7__REVSHi|
#line 144
|__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z5__RRXj|
#line 300
|__asm___20_DebugToolsConfig_cpp__Z4tipsv___Z5__RRXj| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
